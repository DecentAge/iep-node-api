{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "The XIN Node API",
    "description": "
      The XIN node API allows interaction with XIN nodes using HTTP or HTTPS requests to the mainnet port 23457 or to the tesnet port 9876.
      Most HTTP requests can use either the GET or POST methods, but some API calls accept only the POST method for security reasons.
      Responses are returned as JSON objects. Examples shown here are to be used as an orientation, meaning you have to replace the node
      address and accounts, transaction ids etc. (as most parameters) to fit your personal needs. This is an API designed for developers
      who are using XIN to build new services, features and integrations. You can download these API docs (swagger) in the download section
      and run it locally with your node on the mainnet. It is recommended to use the testnet for development. Just contact the forum and ask
      for test tokens to play with. You can use your browser to test simple GET calls or CURL for more advanced calls. Some features/calls
      are available in testnet only, a special notice will be made as soon all tests are done and mainnet activation takes place. More API
      and development related docs will follow. Please stay tuned.

      <p>
      Examples API call base path is http://localhost:23457/api (assuming a local running node) <p>
      <strong> Ports: </strong> <br>
      Mainnet: 23457<br>
      Testnet: 9876
      <p>
      <strong> Mainet server: </strong> <br>
      http://infinity-economics.org/peer <p>

      <strong> Testnet server: </strong> <br>
      http://testnet.infinity-economics.org/peer <p>

      <strong> Download section: </strong> <br>
      http://www.infinity-economics.org/download/

      <p>
      <strong> API stage: </strong> <br>
      Peer review

      <br><br>
      Please refer to the docs section for a quick feature overview:<br>
      http://www.infinity-economics.org/docs/
    ",
    "contact": {

    }
  },
  "host": "localhost:23457",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],

  "paths": {




  "/deleteAccountProperty": {
    "post": {
      "description": "Deletes an account property. POST only.<br>

      curl
      -
      X
      POST
      'http://localhost:23457/api?requestType=deleteAccountProperty&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&property=testkey1&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
      ",
      "operationId": "deleteAccountProperty",
      "tags": [
        "Account"
      ],
      "consumes": [
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "deleteAccountProperty",
          "required": true,
          "type": "string",
          "default": "deleteAccountProperty"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "The account where a property should be removed",
          "required": false,
          "type": "string"
        },
        {
          "name": "property",
          "in": "query",
          "description": "Name of the property",
          "required": true,
          "type": "string"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Secret phrase",
          "required": false,
          "type": "string"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "feeTQT",
          "required": false,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Deadline Value",
          "required": false,
          "type": "integer"
        },
        {
          "name": "setter",
          "in": "query",
          "description": "Is the account who did set the property (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "Account deleted successfully.",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccount": {
    "get": {
      "description": "Get account information given an account. <br>

      curl
      'http://localhost:23457/api?requestType=getAccount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccount",
          "required": true,
          "type": "string",
          "default": "getAccount"
        },
        {
          "name": "account",
          "in": "query",
          "description": "account id",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeLessors",
          "in": "query",
          "description": "Is true to include lessors, lessorsRS and lessorsInfo (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeAssets",
          "in": "query",
          "description": "Is true to include assetBalances and unconfirmedAssetBalances (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeCurrencies",
          "in": "query",
          "description": "Is true to include accountCurrencies (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeEffectiveBalance",
          "in": "query",
          "description": "Is true to include effectiveBalanceXIN and guaranteedBalanceTQT (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": " Returns an account info object",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountBlockCount": {
    "get": {
      "description": "Get the number of blocks forged by an account.<br>

      curl
      'http://localhost:23457/api?requestType=getAccountBlockCount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountBlockCount",
          "required": true,
          "type": "string",
          "default": "getAccountBlockCount"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock ",
          "in": "query",
          "description": " Block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Returns an JSON info object",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountBlockIds": {
    "get": {
      "description": "Get the block IDs of all blocks forged (generated) by an account in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountBlockIds&account=XIN-LHG8-88PJ-A5K9-2NRMB&lastIndex=5'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType ",
          "in": "query",
          "description": "getAccountBlockIds",
          "required": true,
          "type": "string",
          "default": "getAccountBlockIds"
        },
        {
          "name": "account",
          "in": "query",
          "description": " Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest block (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first block ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last block ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountBlocks": {
    "get": {
      "description": "Get the block IDs of all blocks forged (generated) by an account in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountBlocks&account=XIN-LHG8-88PJ-A5K9-2NRMB&lastIndex=5'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountBlocks",
          "required": true,
          "type": "string",
          "default": "getAccountBlocks"
        },
        {
          "name": "account",
          "in": "query",
          "description": " Account ID",
          "required": true,
          "type": "string",
          "default": "getAccount"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest block (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first block to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last block to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeTransactions",
          "in": "query",
          "description": "Is true to retrieve transaction details, otherwise only transaction IDs are retrieved (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountId": {
    "post": {
      "description": "Get an account ID given a secret passphrase or public key. POST only.<br>
      curl
      -
      X
      POST
      'http://localhost:23457/api?requestType%20=getAccountId&secretPhrase=YourSecretPhrase'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType ",
          "in": "query",
          "description": "getAccountId",
          "required": true,
          "type": "string",
          "default": "getAccountId"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountLessors": {
    "get": {
      "description": "Get the lessors to an account (Balance Leasing).<br>
      curl
      'http://localhost:23457/api?requestType=getAccountLessors&account=XIN-LHG8-88PJ-A5K9-2NRMB&height=282497'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountLessors",
          "required": true,
          "type": "string",
          "default": "getAccountLessors"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the height of the blockchain to determine the lessors (optional, default is last block)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {

          }
        }
      }
    }
  }
  ,
  "/getAccountProperties": {
    "get": {
      "description": "Get the Account properties for a specific account or setter.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountProperties&recipient=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountProperties",
          "required": true,
          "type": "string",
          "default": "getAccountProperties"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID to which the property is attached to",
          "required": true,
          "type": "string"
        },
        {
          "name": "setter",
          "in": "query",
          "description": "Is the account ID who set the property (optional if recipient provided))",
          "required": false,
          "type": "string"
        },
        {
          "name": "property",
          "in": "query",
          "description": "Is the property key (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the last block to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last block to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountPublicKey": {
    "get": {
      "description": "Get the public key associated with an account ID.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountPublicKey&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountPublicKey",
          "required": true,
          "type": "string",
          "default": "getAccountPublicKey"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBalance": {
    "get": {
      "description": "Get the balance of an account.<br>
      curl
      'http://localhost:23457/api?requestType=getBalance&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBalance",
          "required": true,
          "type": "string",
          "default": "getBalance"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeEffectiveBalance",
          "in": "query",
          "description": "Is true to include effectiveBalanceXIN and guaranteedBalanceTQT (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the height to retrieve account balance for, if still available (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getGuaranteedBalance": {
    "get": {
      "description": "Get the balance of an account that is confirmed at least a specified number of times.<br>
      curl
      'http://localhost:23457/api?requestType=getGuaranteedBalance&account=XIN-LHG8-88PJ-A5K9-2NRMB&numberOfConfirmations=1440'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getGuaranteedBalance",
          "required": true,
          "type": "string",
          "default": "getGuaranteedBalance"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "numberOfConfirmations",
          "in": "query",
          "description": "Is the minimum number of confirmations for a transaction to be included in the guaranteed balance (optional, if omitted or zero then minimally confirmed transactions are included)",
          "required": true,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getUnconfirmedTransactionIds": {
    "get": {
      "description": "Get a list of unconfirmed transaction IDs associated with an account.<br>
      curl
      'http://localhost:23457/api?requestType=getUnconfirmedTransactionIds&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getUnconfirmedTransactionIds",
          "required": true,
          "type": "string",
          "default": "getUnconfirmedTransactionIds"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getUnconfirmedTransactions": {
    "get": {
      "description": "Get a list of unconfirmed transactions associated with an account.<br>
      curl
      'http://localhost:23457/api?requestType=getUnconfirmedTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getUnconfirmedTransactions",
          "required": true,
          "type": "string",
          "default": "getUnconfirmedTransactions"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/searchAccounts": {
    "get": {
      "description": "Get accounts having a name or description that match a given query in reverse relevance order.<br>
      curl
      'http://localhost:23457/api?requestType=searchAccounts&query=foundation'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "searchAccounts",
          "required": true,
          "type": "string",
          "default": "searchAccounts"
        },
        {
          "name": "query ",
          "in": "query",
          "description": "Is a full text query on the account fields name (S) and description (S) in the standard Lucene syntax",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first account to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/sendMoney": {
    "post": {
      "description": "Send XIN to an account. POST only.<br>
      curl
      -
      X
      POST
      'http://localhost:23457/api?requestType=sendMoney&amountTQT=100000000&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&secretPhrase=YourSecretPhrase&feeTQT=YourSecretPhrase&deadline=60'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "sendMoney",
          "required": true,
          "type": "string",
          "default": "sendMoney"
        },
        {
          "name": "amountTQT",
          "in": "query",
          "description": "Is the amount (in TQT) in the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID of the recipient",
          "required": true,
          "type": "integer"
        },
        {
          "name": "recipientPublicKey",
          "in": "query",
          "description": "Is the public key of the receiving account (optional, enhances security of a new account)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Is set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBlockchainTransactions": {
    "get": {
      "description": "Get the transactions associated with an account in reverse block timestamp order.<br>
      curl
      'http://localhost:23457/api?requestType=getBlockchainTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB&lastIndex=0'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBlockchainTransactions",
          "required": true,
          "type": "string",
          "default": "getBlockchainTransactions"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest block (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "type",
          "in": "query",
          "description": "Is the type of transactions to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "subtype",
          "in": "query",
          "description": "Is the subtype of transactions to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "numberOfConfirmations",
          "in": "query",
          "description": "Is the required number of confirmations per transaction (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "withMessage",
          "in": "query",
          "description": "Is true to retrieve only only transactions having a message attachment, either non-encrypted or decryptable by the account (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "phasedOnly",
          "in": "query",
          "description": "Is true to retrieve only phased transactions (optional unless nonPhasedOnly provided)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "nonPhasedOnly",
          "in": "query",
          "description": "Is true to retrieve only nonphased transactions (optional unless phasedOnly provided)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeExpiredPrunable",
          "in": "query",
          "description": "Is true to retrieve pruned data if available (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includePhasingResult",
          "in": "query",
          "description": "Is true to retrieve execution status of each phased transaction (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "executedOnly",
          "in": "query",
          "description": "Is true to exclude phased transactions that are not yet executed (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/setAccountInfo": {
    "post": {
      "description": "Set account information. POST only.<br>
      curl
      -
      X
      POST
      'http://localhost:23457/api?requestType=setAccountInfo&name=YourSecretPhrase&description=example%20account&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "setAccountInfo",
          "required": true,
          "type": "string",
          "default": "setAccountInfo"
        },
        {
          "name": "name",
          "in": "query",
          "description": "Is a name to associate with the account (optional)",
          "required": true,
          "type": "string"
        },
        {
          "name": "description",
          "in": "query",
          "description": "Is a description to associate with the account (optional)",
          "required": true,
          "type": "string"
        },
        {
          "name": "messagePatternRegex",
          "in": "query",
          "description": "Is a regular expression pattern following the java.util.regex.Pattern specification; incoming transactions are only accepted if they contain a plain text message which matches this pattern (disabled indefinitely due to a security issue)",
          "required": false,
          "type": "string"
        },
        {
          "name": "messagePatternFlags",
          "in": "query",
          "description": "Is a bitmask of java.util.regex.Pattern flags, such as 2 (Pattern.CASE_INSENSITIVE)",
          "required": false,
          "type": "string"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Iis set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/setAccountProperty": {
    "post": {
      "description": "Set account property. POST only.<br>
      curl
      -
      X
      POST
      'http://localhost:23457/api?recipient=XIN-LHG8-88PJ-A5K9-2NRMB&property=country&value=switzerland&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "setAccountProperty",
          "required": true,
          "type": "string",
          "default": "setAccountProperty"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID of the recipient.",
          "required": true,
          "type": "string"
        },
        {
          "name": "property",
          "in": "query",
          "description": "Is the property name.",
          "required": true,
          "type": "string"
        },
        {
          "name": "value",
          "in": "query",
          "description": "Is the property name.",
          "required": true,
          "type": "string"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Iis set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountAssets ": {
    "get": {
      "description": "Get the assets owned by a given account in reverse quantity order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountAssets&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountAssets",
          "required": true,
          "type": "string",
          "default": "getAccountAssets"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },{
          "name": "asset",
          "in": "query",
          "description": "Is an asset ID filter (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the blockchain height at which to retrieve balances (optional, default is the last block in the blockchain)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if asset information is to be included (optional)",
          "required": false,
          "type": "boolean"
        }, {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountCurrencies ": {
   "get": {
     "description": "Get the currencies issued by a given account.<br>
     curl
     'http://localhost:23457/api?requestType=getAccountCurrencies&account=XIN-LHG8-88PJ-A5K9-2NRMB'
     ",
     "tags": [
       "Account"
     ],
     "parameters": [
       {
         "name": "requestType",
         "in": "query",
         "description": "getAccountCurrencies",
         "required": true,
         "type": "string",
         "default": "getAccountCurrencies"
       },
       {
         "name": "account",
         "in": "query",
         "description": "Is the account ID",
         "required": true,
         "type": "string"
       },{
         "name": "currency",
         "in": "query",
         "description": "is a currency ID filter (optional)",
         "required": false,
         "type": "string"
       },
       {
         "name": "height",
         "in": "query",
         "description": "is the blockchain height at which the response applies (optional, default is the current height)",
         "required": false,
         "type": "integer"
       },
       {
         "name": "includeCurrencyInfo",
         "in": "query",
         "description": "is true if several currency information properties is to be included (optional)",
         "required": false,
         "type": "boolean"
       }, {
         "name": "requireBlock",
         "in": "query",
         "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
         "required": false,
         "type": "string"
       },
       {
         "name": "requireLastBlock",
         "in": "query",
         "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
         "required": false,
         "type": "string"
       }
     ],
     "responses": {
       "200": {
         "description": "",
         "examples": {}
       }
     }
   }
  }
  ,
  "/getAccountCurrencyCount ": {
   "get": {
     "description": "Get the number of currencies issued by a given account.<br>
     curl
     'http://localhost:23457/api?requestType=getAccountCurrencyCount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
     ",
     "tags": [
       "Account"
     ],
     "parameters": [
       {
         "name": "requestType",
         "in": "query",
         "description": "getAccountCurrencyCount",
         "required": true,
         "type": "string",
         "default": "getAccountCurrencyCount"
       },
       {
         "name": "account",
         "in": "query",
         "description": "Is the account ID",
         "required": true,
         "type": "string"
       },{
         "name": "height",
         "in": "query",
         "description": "is the blockchain height at which the response applies (optional, default is the current height)",
         "required": false,
         "type": "integer"
       },{
         "name": "requireBlock",
         "in": "query",
         "description": "is the block ID of a block that must be present in the blockchain during execution (optional)",
         "required": false,
         "type": "integer"
       },{
         "name": "requireLastBlock",
         "in": "query",
         "description": "is the block ID of a block that must be last in the blockchain during execution (optional)",
         "required": false,
         "type": "string"
       }
     ],
     "responses": {
       "200": {
         "description": "",
         "examples": {}
       }
     }
   }
  }
  ,
  "/getAccountAssetCount ": {
      "get": {
        "description": "Get the number of assets owned by an account given the account ID.<br>
        curl
        'http://localhost:23457/api?requestType=getAccountAssetCount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
        ",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "requestType",
            "in": "query",
            "description": "getAccountAssetCount",
            "required": true,
            "type": "string",
            "default": "getAccountAssetCount"
          },
          {
            "name": "account",
            "in": "query",
            "description": "Is the account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "description": "Is the height of the blockchain to determine the asset count (optional, default is last block)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "requireBlock",
            "in": "query",
            "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
            "required": false,
            "type": "string"
          },
          {
            "name": "requireLastBlock",
            "in": "query",
            "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
            "required": false,
            "type": "string"
          }

        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {}
          }
        }
      }
  }
  ,
  "/getAccountCurrentAskOrderIds ": {
    "get": {
      "description": "Get current asset order IDs given an account ID in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountCurrentAskOrderIds&account=XIN-LHG8-88PJ-A5K9-2NRMB&asset=17554243582654188572'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountCurrentAskOrderIds",
          "required": true,
          "type": "string",
          "default": "getAccountCurrentAskOrderIds"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },{
          "name": "asset",
          "in": "query",
          "description": "Is an asset ID filter (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountCurrentBidOrderIds ": {
    "get": {
      "description": "Get current asset order IDs given an account ID in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountCurrentBidOrderIds&account=XIN-LHG8-88PJ-A5K9-2NRMB&asset=17554243582654188572'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountCurrentBidOrderIds",
          "required": true,
          "type": "string",
          "default": "getAccountCurrentBidOrderIds"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },{
          "name": "asset",
          "in": "query",
          "description": "Is an asset ID filter (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountCurrentAskOrders ": {
    "get": {
      "description": "Get current asset orders given an account ID in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountCurrentAskOrders&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountCurrentAskOrders",
          "required": true,
          "type": "string",
          "default": "getAccountCurrentAskOrders"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },{
          "name": "asset",
          "in": "query",
          "description": "Is an asset ID filter (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountCurrentBidOrders ": {
    "get": {
      "description": "Get current asset orders given an account ID in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAccountCurrentBidOrders&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAccountCurrentBidOrders",
          "required": true,
          "type": "string",
          "default": "getAccountCurrentBidOrders"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID",
          "required": true,
          "type": "string"
        },{
          "name": "asset",
          "in": "query",
          "description": "Is an asset ID filter (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAccountExchangeRequests ": {
     "get": {
       "description": "Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests).<br>
       curl
       'http://localhost:23457/api?requestType=getAccountExchangeRequests&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Account"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountExchangeRequests",
           "required": true,
           "type": "string",
           "default": "getAccountExchangeRequests"
         },
         {
           "name": "account",
           "in": "query",
           "description": "Is the account ID (optional for expected requests)",
           "required": false,
           "type": "string"
         },{
           "name": "currency",
           "in": "query",
           "description": "is the currency ID (optional for expected requests if account provided)",
           "required": false,
           "type": "string"
           },{
             "name": "includeCurrencyInfo",
             "in": "query",
             "description": "is true to include the response fields code, decimals, name, issuanceHeight, type, timestamp, issuerAccountRS and issuerAccount (optional, applies only to expected requests)",
             "required": false,
             "type": "boolean"
           },
         {
           "name": "firstIndex",
           "in": "query",
           "description": "Is a zero-based index to the first order to retrieve (optional)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "lastIndex",
           "in": "query",
           "description": "Is a zero-based index to the last order to retrieve (optional)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "requireBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         },
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
  ,
  "/getAllPhasingOnlyControls": {
    "get": {
      "description": "Retrieve all accounts subject to phasing control with their respective restrictions.<br>
      curl
      'http://localhost:23457/api?requestType=getAllPhasingOnlyControls&firstIndex=0&lastIndex=1'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType ",
          "in": "query",
          "description": "getAllPhasingOnlyControls",
          "required": true,
          "type": "string",
          "default": "getAllPhasingOnlyControls"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first block ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last block ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getPhasingOnlyControl": {
    "get": {
      "description": "Retrieve phasing control with their respective restrictions for a specific account.<br>
      curl
      'http://localhost:23457/api?requestType=getPhasingOnlyControl&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType ",
          "in": "query",
          "description": "getPhasingOnlyControl",
          "required": true,
          "type": "string",
          "default": "getPhasingOnlyControl"
        },
        {
          "name": "account",
          "in": "query",
          "description": " Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/setPhasingOnlyControl": {
    "post": {
      "description": "Sets (or removes) phasing control for a specific account. POST only.
      Request: Refer to Create Transaction Request for common parameters<br>
      curl
      -
      X
      POST
      'http://localhost:23457/api?requestType=setPhasingOnlyControl&controlVotingModel=0&controlQuorum=1&controlWhitelisted=XIN-LHG8-88PJ-A5K9-2NRMB&secretPhrase=YourSecretPhrase&feeTQT:100000000&deadline=60'
      ",
      "tags": [
        "Account"
      ],
      "parameters": [
        {
          "name": "requestType ",
          "in": "query",
          "description": "setPhasingOnlyControl",
          "required": true,
          "type": "string",
          "default": "setPhasingOnlyControl"
        },
        {
          "name": "controlVotingModel",
          "in": "query",
          "description": "Is the voting model or -1 to remove phasing control",
          "required": true,
          "type": "string"
        },
        {
          "name": "controlQuorum",
          "in": "query",
          "description": "Is the expected quorum (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "controlMinBalance",
          "in": "query",
          "description": "Is the expected minimum balance (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "controlMinBalanceModel",
          "in": "query",
          "description": "Is the expected minimum balance model (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "controlHolding",
          "in": "query",
          "description": "Is the holding ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "controlWhitelisted",
          "in": "query",
          "description": "Is the whitelisted accounts (optional, multiple values)",
          "required": false,
          "type": "string"
        },{
          "name": "controlMaxFees",
          "in": "query",
          "description": "Is the maximum allowed accumulated total fees for not yet finished phased transactions (optional)",
          "required": false,
          "type": "string"
        },{
          "name": "controlMinDuration",
          "in": "query",
          "description": "Is the minimum duration in block height (optional)",
          "required": false,
          "type": "string"
        },{
          "name": "controlMaxDuration",
          "in": "query",
          "description": "Is the maximum phasing duration in block height (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }



  ,
  "/sellAlias": {
    "post": {
      "description": "Sell an alias. POST only.
      Note: An alias can be transferred rather than sold by setting priceTQT to zero. A pending sale can be canceled by selling again to self for a price of zero.<br>
      curl
      -X
      POST 'http://localhost:23457/api?requestType=sellAlias&secretPhrase=YourSecretPhrase&aliasName=testalias&priceTQT=5000000000&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "sellAlias",
          "required": true,
          "type": "string",
          "default": "sellAlias"
        },
        {
          "name": "alias",
          "in": "query",
          "description": "Is the ID of the alias (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "aliasName",
          "in": "query",
          "description": "Is the alias name (optional if alias provided)",
          "required": false,
          "type": "string"
        }, {
          "name": "priceTQT",
          "in": "query",
          "description": "Is the asking price (in TQT) of the alias",
          "required": true,
          "type": "string"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID of the recipient (only if there is a designated recipient)",
          "required": false,
          "type": "string"
        },
        {
          "name": "recipientPublicKey",
          "in": "query",
          "description": "Is the public key of the recipient account (only applicable if recipient provided; optional, enhances security of a new account)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/deleteAlias": {
    "post": {
      "description": "Delete an alias given an alias ID or name. POST only.
      Request: Refer to Create Transaction Request for common parameters.<br>
      curl
      -X
      POST
      'https://localhost:23457/api?requestType=deleteAlias&aliasName=testalias'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "deleteAlias",
          "required": true,
          "type": "string",
          "default": "deleteAlias"
        },
        {
          "name": "alias",
          "in": "query",
          "description": "Is the ID of the alias (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "aliasName",
          "in": "query",
          "description": "Is the alias name (optional if alias provided)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAlias": {
    "get": {
      "description": "Get information about a given alias<br>
      curl
      'https://localhost:23457/api?requestType=getAlias&alias=15515279700680480368'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAlias",
          "required": true,
          "type": "string",
          "default": "getAlias"
        },
        {
          "name": "alias",
          "in": "query",
          "description": "Is the ID of the alias (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "aliasName",
          "in": "query",
          "description": "Is the alias name (optional if alias provided)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliasCount": {
    "get": {
      "description": "Get the number of aliases owned by an account given the account ID.<br>
      curl
      'http://localhost:23457/api?requestType=getAliasCount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliasCount",
          "required": true,
          "type": "string",
          "default": "getAliasCount"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliases": {
    "get": {
      "description": "Get information on aliases owned by a given account in alias name order.<br>
      curl
      'https://localhost:23457/api?requestType=getAliases&account=XIN-LHG8-88PJ-A5K9-2NRMB&lastIndex=1'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliases",
          "required": true,
          "type": "string",
          "default": "getAliases"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Account ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest creation time (in seconds since the genesis block) of the aliases (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first alias to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last alias to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliasesLike": {
    "get": {
      "description": "Get all aliases starting with a given prefix in alias name order.<br>
      curl
      'https://localhost:23457/api?requestType=getAliasesLike&aliasPrefix=test'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliasesLike",
          "required": true,
          "type": "string",
          "default": "getAliasesLike"
        },
        {
          "name": "aliasPrefix",
          "in": "query",
          "description": "Is the prefix (at least 2 characters long) of the aliasName",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first alias to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last alias to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/buyAlias": {
    "post": {
      "description": "Buy an alias. POST only.
      Note: An alias can be transferred rather than sold by setting priceTQT to zero.
      A pending sale can be canceled by selling again to self for a price of zero.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=buyAlias&secretPhrase=YourSecretPhrase&aliasName=testalias&priceTQT=5000000000&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&feeTQT=100000000&deadline=60'

      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "buyAlias",
          "required": true,
          "type": "string",
          "default": "buyAlias"
        },
        {
          "name": "alias",
          "in": "query",
          "description": "Is the ID of the alias (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "aliasName",
          "in": "query",
          "description": "Is the alias name (optional if alias provided)",
          "required": false,
          "type": "string"
        }, {
          "name": "amountTQT",
          "in": "query",
          "description": "Is the amount (in TQT) offered for an alias for sale",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/setAlias": {
    "post": {
      "description": "Create and/or assign an alias. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=buyAlias&secretPhrase=YourSecretPhrase&aliasName=testalias&aliasURI=&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "setAlias",
          "required": true,
          "type": "string",
          "default": "setAlias"
        },
        {
          "name": "aliasName",
          "in": "query",
          "description": "is the alias name",
          "required": true,
          "type": "string"
        },
        {
          "name": "aliasURI",
          "in": "query",
          "description": "is the alias URI",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliasesPublicOffers": {
    "get": {
      "description": "Get all public alias sell offer.<br>
      curl
      'https://localhost:23457/api?requestType=getAliasesPublicOffers&order=asc&orderColumn=price'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliasesPublicOffers",
          "required": true,
          "type": "string",
          "default": "getAliasesPublicOffers"
        },
        {
          "name": "order",
          "in": "query",
          "description": "Is the sortorder returned",
          "required": false,
          "type": "string"
        },
        {
          "name": "orderColumn",
          "in": "query",
          "description": "Is the database coloumn on which sort is used",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "is a zero-based index to the first alias to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "is a zero-based index to the last alias to retrieve (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliasesPrivateOffers": {
    "get": {
      "description": "Get all private alias sell offer<br>
      curl
      'https://localhost:23457/api?requestType=getAliasesPrivateOffers&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliasesPrivateOffers",
          "required": true,
          "type": "string",
          "default": "getAliasesPrivateOffers"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the accountID",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "is a zero-based index to the first alias to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "is a zero-based index to the last alias to retrieve (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAliasesOpenOffers": {
    "get": {
      "description": "Get all  sell offers to a given accountID<br>
      curl
      'https://localhost:23457/api?requestType=getAliasesOpenOffers&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Aliases"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAliasesOpenOffers",
          "required": true,
          "type": "string",
          "default": "getAliasesOpenOffers"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the accountID",
          "required": false,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "is a zero-based index to the first alias to retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "is a zero-based index to the last alias to retrieve (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }



  ,
  "/cancelBidOrder ": {
    "post": {
      "description": "Cancel an existing asset order. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=cancelBidOrder&secretPhrase=YourSecretPhrase&order=17185236428295897167&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "cancelBidOrder",
          "required": true,
          "type": "string",
          "default": "cancelBidOrder"
        },
        {
          "name": "order",
          "in": "query",
          "description": "Is the order ID of the order being canceled",
          "required": false,
          "type": "string"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Is set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/cancelAskOrder ": {
    "post": {
      "description": "Cancel an existing asset order. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=cancelAskOrder&secretPhrase=YourSecretPhrase&order=17185236428295897167&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "cancelAskOrder",
          "required": true,
          "type": "string",
          "default": "cancelAskOrder"
        },
        {
          "name": "order",
          "in": "query",
          "description": "Is the order ID of the order being canceled",
          "required": false,
          "type": "string"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Is set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/deleteAssetShares ": {
    "post": {
      "description": "Permanently deletes a specified quantity of owned asset shares. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=deleteAssetShares&asset=5920455660623529270&quantityQNT=100&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "deleteAssetShares",
          "required": true,
          "type": "string",
          "default": "deleteAssetShares"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "quantityQNT",
          "in": "query",
          "description": "Is the quantity (in QNT) of the asset to be deleted",
          "required": true,
          "type": "integer"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Is set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/dividendPayment ": {
    "post": {
      "description": "Pay dividend to all shareholders of an asset. POST only.<br>
      curl
      -X
      post
      'http://localhost:23457/api?requestType=dividendPayment&asset=3517042713515967694&height=161157&amountTQTPerQNT=100000000'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "dividendPayment",
          "required": true,
          "type": "string",
          "default": "dividendPayment"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the blockchain height at which asset holders shares will be counted (must be less than 1440 blocks in the past)",
          "required": true,
          "type": "integer"
        },
        {
          "name": "amountTQTPerQNT",
          "in": "query",
          "description": "Is dividend amount (in TQT per QNT of the asset)",
          "required": true,
          "type": "integer"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "publicKey",
          "in": "query",
          "description": "Is the public key of the account (optional if secretPhrase provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "feeTQT",
          "in": "query",
          "description": "Is the fee (in TQT) for the transaction",
          "required": true,
          "type": "integer"
        },
        {
          "name": "deadline",
          "in": "query",
          "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
          "required": true,
          "type": "integer"
        },
        {
          "name": "referencedTransactionFullHash",
          "in": "query",
          "description": "Creates a chained transaction, meaning that the current transaction cannot be confirmed unless the referenced transaction is also confirmed (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "broadcast",
          "in": "query",
          "description": "Is set to false to prevent broadcasting the transaction to the network (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllAssets ": {
    "get": {
      "description": "Get all assets in the exchange in reverse block height of creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllAssets'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllAssets",
          "required": true,
          "type": "string",
          "default": "getAllAssets"
        },

        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeCounts",
          "in": "query",
          "description": "Is true if the fields beginning with numberOf... are to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllOpenBidOrders ": {
    "get": {
      "description": "Get all open bid orders in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllOpenBidOrders'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllOpenBidOrders",
          "required": true,
          "type": "string",
          "default": "getAllOpenBidOrders"
        },

        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllOpenAskOrders ": {
    "get": {
      "description": "Get all open ask orders in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllOpenAskOrders'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllOpenAskOrders",
          "required": true,
          "type": "string",
          "default": "getAllOpenAskOrders"
        },

        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllTrades ": {
    "get": {
      "description": "Get all trades since a given timestamp in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllTrades'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllTrades",
          "required": true,
          "type": "string",
          "default": "getAllTrades"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the timestamp (in seconds since the genesis block) to begin retrieving trades (optional, default 0)",
          "required": false,
          "default":0,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if asset information is to be included in the result (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAsset": {
    "get": {
      "description": "Get asset information given an asset ID.<br>
      curl
      'http://localhost:23457/api?requestType=getAsset&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAsset",
          "required": true,
          "type": "string",
          "default": "getAsset"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeCounts",
          "in": "query",
          "description": "Is true if the fields beginning with numberOf... are to be included (optional)",
          "required": false,
          "type": "boolean"
        },

        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetAccountCount ": {
    "get": {
      "description": "Get the number of accounts that own an asset given the asset ID.<br>
      curl
      'http://localhost:23457/api?requestType=getAssetAccountCount&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetAccountCount",
          "required": true,
          "type": "string",
          "default": "getAssetAccountCount"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": false,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the height of the blockchain to determine the account count (optional, default is last block)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetAccounts ": {
    "get": {
      "description": "Get the accounts that own an asset given the asset ID in reverse quantity order.<br>
      curl
      'http://localhost:23457/api?requestType=getAssetAccountCount&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetAccounts",
          "required": true,
          "type": "string",
          "default": "getAssetAccounts"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": false,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the height of the blockchain to determine the account count (optional, default is last block)",
          "required": false,
          "type": "integer"
        },

        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first account to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last account to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetDeletes ": {
    "get": {
      "description": "Get asset deletions for a specific asset or account.<br>
      curl
      'http://localhost:23457/api?requestType=getAssetDeletes&asset=5920455660623529270'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetDeletes",
          "required": true,
          "type": "string",
          "default": "getAssetDeletes"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID (optional if account is provided)",
          "required": false,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID (optional if asset is provided)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest deletion (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if asset information is to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetIds ": {
    "get": {
      "description": "Get the IDs of all assets in the exchange in reverse block height of creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getAssetIds&firstIndex=15&lastIndex=15'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetIds",
          "required": true,
          "type": "string",
          "default": "getAssetIds"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first asset ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last asset ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetTransfers ": {
    "get": {
      "description": "Get transfers associated with a given asset and/or account in reverse block height order (or in the expected order of execution for expected transfers).<br>
      curl
      'http://localhost:23457/api?requestType=getAssetTransfers&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetTransfers",
          "required": true,
          "type": "string",
          "default": "getAssetTransfers"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID (optional if asset is provided)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first transfer to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last transfer to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if the decimals and name fields are to be included (optional, does not apply to expected transfers)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssets ": {
    "get": {
      "description": "Get asset information given multiple asset IDs<br>
      curl
      'http://localhost:23457/api?requestType=getAssets&assets=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssets",
          "required": true,
          "type": "string",
          "default": "getAssets"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is one the multiple asset IDs",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeCounts",
          "in": "query",
          "description": "Is true if the fields beginning with numberOf... are to be included (optional)",
          "required": false,
          "type": "boolean"
        },

        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetsByIssue": {
    "get": {
      "description": "Get asset information given multiple creation account IDs in reverse block height of creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getAssetsByIssuer&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetsByIssuer",
          "required": true,
          "type": "string",
          "default": "getAssetsByIssuer"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is one of the multiple account IDs",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeCounts",
          "in": "query",
          "description": "Is true if the fields beginning with numberOf... are to be included (optional)",
          "required": false,
          "type": "boolean"
        },

        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedAssetDeletes": {
    "get": {
      "description": "Gets asset deletes which are expected to be executed in the next block.<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedAssetDeletes'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExpectedAssetDeletes",
          "required": true,
          "type": "string",
          "default": "getExpectedAssetDeletes"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest deletion (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if asset information is to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedAssetTransfers": {
    "get": {
      "description": "Gets asset transfers which are expected to be executed in the next block.<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedAssetTransfers'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExpectedAssetDeletes",
          "required": true,
          "type": "string",
          "default": "getExpectedAssetDeletes"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest deletion (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if asset information is to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last phased transaction to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBidOrder": {
    "get": {
      "description": "Get a bid order given an order ID.<br>
      curl
      'http://localhost:23457/api?requestType=getBidOrder&order=6044046093672850641'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBidOrder",
          "required": true,
          "type": "string",
          "default": "getBidOrder"
        },
        {
          "name": "order",
          "in": "query",
          "description": "Is the Order ID",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAskOrder": {
    "get": {
      "description": "Get a ask order given an order ID.<br>
      curl
      'http://localhost:23457/api?requestType=getAskOrder&order=6044046093672850641'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAskOrder",
          "required": true,
          "type": "string",
          "default": "getAskOrder"
        },
        {
          "name": "order",
          "in": "query",
          "description": "Is the Order ID",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBidOrderIds": {
    "get": {
      "description": "Get bid order IDs given an asset ID, in order of decreasing bid price or increasing ask price.<br>
      curl
      'http://localhost:23457/api?requestType=getBidOrderIds&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBidOrderIds",
          "required": true,
          "type": "string",
          "default": "getBidOrderIds"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAskOrderIds": {
    "get": {
      "description": "Get ask order IDs given an asset ID, in order of decreasing bid price or increasing ask price.<br>
      curl
      'http://localhost:23457/api?requestType=getAskOrderIds&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAskOrderIds",
          "required": true,
          "type": "string",
          "default": "getAskOrderIds"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order ID to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBidOrders": {
    "get": {
      "description": "Get bid/ask orders given an asset ID, in order of decreasing bid price or increasing
      ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getBidOrders&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "Is one of getBidOrders, getAskOrders, getExpectedBidOrders or getExpectedAskOrders, where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block",
          "required": true,
          "type": "string",
          "default": "getBidOrders"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "sortByPrice",
          "in": "query",
          "description": "Is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "showExpectedCancellations",
          "in": "query",
          "description": "Is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAskOrders": {
    "get": {
      "description": "Get ask orders given an asset ID, in order of decreasing bid price or increasing
      ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getAskOrders&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "Is one of getBidOrders, getAskOrders, getExpectedBidOrders or getExpectedAskOrders, where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block",
          "required": true,
          "type": "string",
          "default": "getAskOrders"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "sortByPrice",
          "in": "query",
          "description": "Is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "showExpectedCancellations",
          "in": "query",
          "description": "Is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedAskOrders": {
    "get": {
      "description": "Get expected ask orders given an asset ID, in order of decreasing bid price or increasing
      ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedAskOrders&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "Is one of getBidOrders, getAskOrders, getExpectedBidOrders or getExpectedAskOrders, where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block",
          "required": true,
          "type": "string",
          "default": "getExpectedAskOrders"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "sortByPrice",
          "in": "query",
          "description": "Is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "showExpectedCancellations",
          "in": "query",
          "description": "Is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedBidOrders": {
    "get": {
      "description": "Get expected bid orders given an asset ID, in order of decreasing bid price or increasing
      ask price (if sortByPrice is true for expected orders, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedBidOrders&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "Is one of getBidOrders, getAskOrders, getExpectedBidOrders or getExpectedAskOrders, where expected orders are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block",
          "required": true,
          "type": "string",
          "default": "getExpectedBidOrders"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "sortByPrice",
          "in": "query",
          "description": "Is true to sort by price (optional, applies only to expected orders, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "showExpectedCancellations",
          "in": "query",
          "description": "Is true to include orders that are expected to be cancelled in the next block, based on the content of the unconfirmed transactions pool and the phased transactions expected to finish in the next block (optional, does not apply to expected orders)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last order to retrieve (optional, does not apply to expected orders)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedOrderCancellations": {
    "get": {
      "description": "Get all expected order cancellations in the order in which they are expected to be executed.<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedOrderCancellations'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "Is getExpectedOrderCancellations, where expected cancellations are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block",
          "required": true,
          "type": "string",
          "default": "getExpectedOrderCancellations"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getLastTrades": {
    "get": {
      "description": "Get the last trade of each of multiple assets.<br>
      curl
      'http://localhost:23457/api?requestType=getLastTrades&assets=17091401215301664836'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getLastTrades",
          "required": true,
          "type": "string",
          "default": "getLastTrades"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is one the multiple asset IDs",
          "required": true,
          "type": "string"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getOrderTrades": {
    "get": {
      "description": "Get all trades that were executed as a result of a given askOrder and/or bidOrder in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getOrderTrades&askOrder=2769987326979385551&includeAssetInfo=true'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getOrderTrades",
          "required": true,
          "type": "string",
          "default": "getOrderTrades"
        },
        {
          "name": "askOrder",
          "in": "query",
          "description": "Is an ask order ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "bidOrder",
          "in": "query",
          "description": "Is a bid order ID (optional if askOrder provided)",
          "required": false,
          "type": "string"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if the decimals and name fields are to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getTrades": {
    "get": {
      "description": "Get trades associated with a given asset and/or account in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getTrades&asset=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getTrades",
          "required": true,
          "type": "string",
          "default": "getTrades"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID (optional if asset provided)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest block (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last trade to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeAssetInfo",
          "in": "query",
          "description": "Is true if the decimals and name fields are to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/issueAsset": {
    "post": {
      "description": "Create an asset on the exchange. POST only.
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=issueAsset&secretPhrase=secretPhrase&name=MyCoin&description=MyDecription&quantityQNT=10000&decimals=2&deadline=60&feeTQT=100000000000'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "issueAsset",
          "required": true,
          "type": "string",
          "default": "issueAsset"
        },
        {
          "name": "name",
          "in": "query",
          "description": "Is the name of the asset",
          "required": true,
          "type": "string"
        },
        {
          "name": "description",
          "in": "query",
          "description": "Is a url-encoded description of the asset in UTF-8 with a maximum length of 1000 bytes (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "quantityQNT",
          "in": "query",
          "description": "Is the total amount (in QNT) of the asset in existence",
          "required": true,
          "type": "integer"
        },
        {
          "name": "decimals",
          "in": "query",
          "description": "Is the number of decimal places used by the asset (optional, zero default)",
          "default":0,
          "required": false,
          "type": "integer"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the issuer",
          "required": true,
          "type": "string"
        },
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/placeBidOrder": {
    "post": {
      "description": "Place an asset order. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=placeBidOrder&secretPhrase=YourSecretPhrase&asset=17554243582654188572&quantityQNT=1000000&priceTQT=100000000&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "placeBidOrder",
          "required": true,
          "type": "string",
          "default": "placeBidOrder"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID of the asset being ordered",
          "required": true,
          "type": "string"
        },

        {
          "name": "quantityQNT",
          "in": "query",
          "description": "Is the amount (in QNT) of the asset being ordered",
          "required": true,
          "type": "integer"
        },{
          "name": "priceTQT",
          "in": "query",
          "description": "Is the bid price (in TQT)",
          "required": false,
          "type": "integer"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/placeAskOrder": {
    "post": {
      "description": "Place an asset order. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=placeAskOrder&secretPhrase=YourSecretPhrase&asset=17554243582654188572&quantityQNT=1000000&priceTQT=100000000&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "placeAskOrder",
          "required": true,
          "type": "string",
          "default": "placeAskOrder"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID of the asset being ordered",
          "required": true,
          "type": "string"
        },

        {
          "name": "quantityQNT",
          "in": "query",
          "description": "Is the amount (in QNT) of the asset being ordered",
          "required": true,
          "type": "integer"
        },{
          "name": "priceTQT",
          "in": "query",
          "description": "Is the ask price (in TQT)",
          "required": false,
          "type": "integer"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/searchAssets": {
    "get": {
      "description": "Get assets having a name or description that match a given query in reverse relevance order.<br>
      curl
      'http://localhost:23457/api?requestType=searchAssets&query=testasset'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "searchAssets",
          "required": true,
          "type": "string",
          "default": "searchAssets"
        },
        {
          "name": "query",
          "in": "query",
          "description": "Is a full text query on the asset fields name (S) and description (S) in the standard Lucene syntax",
          "required": true,
          "type": "string"
        },

        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is a zero-based index to the first asset to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is a zero-based index to the last asset to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeCounts",
          "in": "query",
          "description": "Is true if the fields beginning with numberOf... are to be included (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/transferAsset": {
    "post": {
      "description": "Transfer a quantity of an asset from one account to another. POST only.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=transferAsset&secretPhrase=YourSecretPhrase&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&asset=17554243582654188572&quantityQNT=1000&feeTQT=100000000&deadline=60'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "transferAsset",
          "required": true,
          "type": "string",
          "default": "transferAsset"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the recipient account ID",
          "required": true,
          "type": "string"
        },

        {
          "name": "recipientPublicKey",
          "in": "query",
          "description": "Is the public key of the recipient account (optional, enhances security of a new account)",
          "required": false,
          "type": "string"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is the asset ID of the asset being ordered",
          "required": true,
          "type": "string"
        }
      , {
          "name": "quantityQNT",
          "in": "query",
          "description": "Is the amount (in QNT) of the asset being transferred",
          "required": true,
          "type": "integer"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAssetDividends ": {
    "get": {
      "description": "Get asset dividends information for an asset ID<br>
      curl
      'http://localhost:23457/api?requestType=getAssetDividends&assets=17554243582654188572'
      ",
      "tags": [
        "Assets"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAssetDividends",
          "required": true,
          "type": "string",
          "default": "getAssetDividends"
        },
        {
          "name": "asset",
          "in": "query",
          "description": "Is one the multiple asset IDs",
          "required": true,
          "type": "string"
        },
        {
          "name": "firstindex",
          "in": "query",
          "description": "is a zero-based index to the first retrieve (optional)",
          "required": false,
          "type": "boolean"
        },

        {
          "name": "lastindex",
          "in": "query",
          "description": "is a zero-based index to the last retrieve (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "is the timestamp (in seconds since the genesis block) of the block",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }


  ,
  "/getBlock": {
    "get": {
      "description": "Get a block object given a block ID or block height.<br>
      curl
      'http://localhost:23457/api?requestType=getBlock&block=7525910330972167609'
      ",
      "tags": [
        "Blocks"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBlock",
          "required": true,
          "type": "string",
          "default": "getBlock"
        },
        {
          "name": "block",
          "in": "query",
          "description": "Is the block ID (optional)",
          "required":false,
          "type": "string"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the block height (optional if block provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the timestamp (in seconds since the genesis block) of the block (optional if height provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeTransactions",
          "in": "query",
          "description": "Iss true to include transaction details (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeExecutedPhased",
          "in": "query",
          "description": "Is true to include approved and executed phased transactions (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBlockId": {
    "get": {
      "description": "Get a block ID given a block height.<br>
      curl
      'http://localhost:23457/api?requestType=getBlockId&height=500'
      ",
      "tags": [
        "Blocks"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBlockId",
          "required": true,
          "type": "string",
          "default": "getBlockId"
        },
        {
          "name": "height",
          "in": "query",
          "description": "Is the block height",
          "required": true,
          "type": "integer"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBlocks": {
    "get": {
      "description": "Get blocks from the blockchain in reverse block height order.<br>
      curl
      'http://localhost:23457/api?requestType=getBlocks'
      ",
      "tags": [
        "Blocks"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBlocks",
          "required": true,
          "type": "string",
          "default": "getBlocks"
        },
        {
          "name": "timestamp",
          "in": "query",
          "description": "Is the earliest block (in seconds since the genesis block) to retrieve (optional)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "firstIndex",
          "in": "query",
          "description": "Is first block to retrieve (optional, default is zero or the last block on the blockchain)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "lastIndex",
          "in": "query",
          "description": "Is the last block to retrieve (optional, default is firstIndex + 99)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "includeTransactions",
          "in": "query",
          "description": "Is true to include transaction details (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "includeExecutedPhased",
          "in": "query",
          "description": "Is true to include approved and executed phased transactions (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        },
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }


  ,
  "/decryptFrom": {
    "get": {
      "description": "Decrypt an AES-encrypted message.<br>
      curl
      'http://localhost:23457/api?requestType=decryptFrom&secretPhrase=YourSecretPhrase&account=XIN-LHG8-88PJ-A5K9-2NRMB&data=5c30bd27cc86a8ab0349aaf66deae3c0a9db5675b5c4ba973dd47f37e06157&nonce=7f3c9082c73a7bd825aa48d23fc138fd05a466700ff9fc3a040bbb29d3a60ee1&decryptedMessageIsText=false&uncompressDecryptedMessage=false'
      ",
      "tags": [
        "Messages"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "decryptFrom",
          "required": true,
          "type": "string",
          "default": "decryptFrom"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the recipient",
          "required": true,
          "type": "string"
        },
        {
          "name": "account",
          "in": "query",
          "description": "Is the account ID of the recipient",
          "required": true,
          "type": "string"
        },
        {
          "name": "data",
          "in": "query",
          "description": "Is AES-encrypted data",
          "required": true,
          "type": "integer"
        },
        {
          "name": "nonce",
          "in": "query",
          "description": "Is the unique nonce associated with the encrypted data",
          "required": true,
          "type": "integer"
        },
        {
          "name": "decryptedMessageIsText",
          "in": "query",
          "description": "Is false if the decrypted message is a hex string, otherwise the decrypted message is text (optional)",
          "required": false,
          "type": "boolean"
        }, {
          "name": "uncompressDecryptedMessage",
          "in": "query",
          "description": "Is false to prevent gzip uncompression after decryption (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/encryptTo": {
    "get": {
      "description": "Encrypt a message using AES without sending it.<br>
      curl
      'http://localhost:23457/api?requestType=encryptTo&secretPhrase=YourSecretPhrase&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&messageToEncrypt=testmessage'
      ",
      "tags": [
        "Messages"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "encryptTo",
          "required": true,
          "type": "string",
          "default": "encryptTo"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the sender",
          "required": true,
          "type": "string"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID of the recipient",
          "required": true,
          "type": "string"
        },
        {
          "name": "messageToEncryp",
          "in": "query",
          "description": "Is either UTF-8 text or a string of hex digits to be compressed and converted into a 1000 byte maximum bytecode then encrypted using AES",
          "required": true,
          "type": "string"
        }, {
          "name": "messageToEncryptIsText",
          "in": "query",
          "description": "Is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional)",
          "required": false,
          "type": "boolean"
        },{
          "name": "compressMessageToEncrypt",
          "in": "query",
          "description": "Is false to prevent gzip compression before encryption (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getSharedKey": {
    "get": {
      "description": "Get the one-time shared key used for encryption of messages.<br>
      curl
      'http://localhost:23457/api?requestType=getSharedKey&account=XIN-LHG8-88PJ-A5K9-2NRMB&secretPhrase=YourSecretPhrase&nonce=0102030405060708091011121314151617181920212223242526272829303132'
      ",
      "tags": [
        "Messages"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getSharedKey",
          "required": true,
          "type": "string",
          "default": "getSharedKey"
        }, {
          "name": "account",
          "in": "query",
          "description": "Is the recipient account ID",
          "required": true,
          "type": "string"
        },

        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret phrase of the sender",
          "required": true,
          "type": "string"
        },

        {
          "name": "nonce",
          "in": "query",
          "description": "Is the 32-byte pseudorandom nonce",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/readMessage": {
    "get": {
      "description": "Get a message given a transaction ID.<br>
      curl
      'http://localhost:23457/api?requestType=readMessage&transaction=9908575668289607167&secretPhrase=YourSecretPhrase'
      ",
      "tags": [
        "Messages"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "readMessage",
          "required": true,
          "type": "string",
          "default": "readMessage"
        }, {
          "name": "transaction",
          "in": "query",
          "description": "Is the transaction ID of the message",
          "required": true,
          "type": "string"
        },

        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase of the account that received the message (optional)",
          "required": false,
          "type": "string"
        },

        {
          "name": "sharedKey",
          "in": "query",
          "description": "Is the shared key used to decrypt the message (optional) (see Get Shared Key)",
          "required": false,
          "type": "string"
        },   {
          "name": "retrieve",
          "in": "query",
          "description": "Is true to retrieve pruned data from archival nodes (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "requireBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "requireLastBlock",
          "in": "query",
          "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/sendMessage": {
    "get": {
      "description": "Create an encrypted Message transaction.

      POST only<br>
      curl
      'http://localhost:23457/api?requestType=sendMessage&secretPhrase=YourSecretPhrase&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&messageToEncrypt=TheMessage&feeTQT=300000000&deadline=60'
      ",
      "tags": [
        "Messages"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "sendMessage",
          "required": true,
          "type": "string",
          "default": "sendMessage"
        },
        {
          "name": "recipient",
          "in": "query",
          "description": "Is the account ID of the recipient (optional)",
          "required": true,
          "type": "string"
        },
        {
          "name": "recipientPublicKey",
          "in": "query",
          "description": "Is the public key of the receiving account (optional if the account has at least one outgoing transaction, otherwise required)",
          "required": false,
          "type": "string"
        },
        {
          "name": "messageToEncrypt",
          "in": "query",
          "description": "Is either UTF-8 text or a string of hex digits to be compressed (unless compressMessageToEncrypt is false. optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "messageToEncryptIsText",
          "in": "query",
          "description": "Is false if the message to encrypt is a hex string, otherwise the message to encrypt is text (optional)",
          "required": false,
          "type": "boolean"
        },
        {
          "name": "encryptedMessageData",
          "in": "query",
          "description": "Is already encrypted data which overrides messageToEncrypt if provided (optional)",
          "required": false,
          "type": "string"
        }, {
          "name": "encryptedMessageNonce",
          "in": "query",
          "description": "Is a unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided)",
          "required": false,
          "type": "integer"
        },
        {
          "name": "compressMessageToEncrypt",
          "in": "query",
          "description": "Is false to prevent gzip compression before encryption (optional)",
          "required": false,
          "type": "boolean"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }


  ,
  "/decodeHallmark": {
    "get": {
      "description": "Decode a node hallmark.<br>
      curl
      'http://localhost:23457/api?requestType=decodeHallmark&hallmark=827ed8cf83bbd36419002759d960a1bec952f2209db8ed3be958...'
      ",
      "tags": [
        "Hallmark"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "decodeHallmark",
          "required": true,
          "type": "string",
          "default": "decodeHallmark"
        },
        {
          "name": "hallmark",
          "in": "query",
          "description": "Is the hallmark value",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/markHost": {
    "post": {
      "description": "Decode a node hallmark. Note: Refer to Create Hallmark for details.<br>
      curl
      -X
      POST
      'http://localhost:23457/api?requestType=markHost&secretPhrase=YourSecretPhrase&host=YourHost&weight=1&date=2017-01-10'
      ",
      "tags": [
        "Hallmark"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "markHost",
          "required": true,
          "type": "string",
          "default": "markHost"
        },
        {
          "name": "secretPhrase",
          "in": "query",
          "description": "Is the secret passphrase for the account that will be hallmarked on the node",
          "required": true,
          "type": "string"
        },
        {
          "name": "host",
          "in": "query",
          "description": "Is the IP address or domain name of the node",
          "required": true,
          "type": "string"
        },
        {
          "name": "weight",
          "in": "query",
          "description": "Is the weight to assign to the node",
          "required": true,
          "type": "integer"
        },
        {
          "name": "date",
          "in": "query",
          "description": "Is the current date in YYYY-MM-DD format",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }



  ,
  "/getExpectedExchangeRequests ": {
     "get": {
       "description": "Get the exchange requests associated with a given account and/or currency in reverse chronological order (or in expected order of execution for expected requests).
        expected requests are from the unconfirmed transactions pool or are phased transactions scheduled to finish in the next block
       <br>
       curl
       'http://localhost:23457/api?requestType=getExpectedExchangeRequests&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Currencies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getExpectedExchangeRequests",
           "required": true,
           "type": "string",
           "default": "getExpectedExchangeRequests"
         },
         {
           "name": "account",
           "in": "query",
           "description": "the account ID (optional for expected requests)",
           "required": true,
           "type": "string"
         },{
           "name": "currency",
           "in": "query",
           "description": "the currency ID (optional for expected requests if account provided)",
           "required": false,
           "type": "string"
           },{
             "name": "includeCurrencyInfo",
             "in": "query",
             "description": "true to include the response fields code, decimals, name, issuanceHeight, type, timestamp, issuerAccountRS and issuerAccount (optional, applies only to expected requests)",
             "required": false,
             "type": "boolean"
           },
         {
           "name": "firstIndex",
           "in": "query",
           "description": "a zero-based index to the first order to retrieve (optional)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "lastIndex",
           "in": "query",
           "description": "a zero-based index to the last order to retrieve (optional)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         },
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
  }
  ,
  "/canDeleteCurrency": {
    "get": {
      "description": "Determine if a currency can be deleted.<br>
      curl
      'http://localhost:23457/api?requestType=canDeleteCurrency&account=XIN-LHG8-88PJ-A5K9-2NRMB&currency=8423907272718554127'
      <p>
      Note: a currency can be deleted only when all units of the currency are held by account.
      A reservable currency that has not yet been issued can be deleted by the issuer.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "canDeleteCurrency",
          "required": true,
          "type": "string",
          "default": "canDeleteCurrency"
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/currencyBuy": {
    "post": {
      "description": "Make an exchange request to buy an exchangeable currency. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=currencyBuy&currency=8540756875632745876&rateTQT=3500000000&units=8000&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
      <p>
      Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer).
      The request then expires, regardless of the amount of currency exchanged; the request may be completely filled,
      partially filled, or expire without any exchange if no matching offers are found.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "currencyBuy",
          "required": true,
          "type": "string",
          "default": "currencyBuy"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "he currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "rateTQT",
          "in": "query",
          "description": "the exchange rate (in TQT per QNT)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the amount of the currency to buy (in QNT)",
          "required": true,
          "type": "string",
        }


      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/currencySell": {
    "post": {
      "description": "Make an exchange request to sell an exchangeable currency. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=currencySell&currency=8540756875632745876&rateTQT=3500000000&units=8000&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
      <p>
      Note: An exchange request is immediately executed once accepted onto the blockchain based only on currently available offers (refer to Publish Exchange Offer).
      The request then expires, regardless of the amount of currency exchanged; the request may be completely filled,
      partially filled, or expire without any exchange if no matching offers are found.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "currencySell",
          "required": true,
          "type": "string",
          "default": "currencySell"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "rateTQT",
          "in": "query",
          "description": "the exchange rate (in TQT per QNT)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the amount of the currency to sell (in QNT)",
          "required": true,
          "type": "string",
        }


      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/currencyReserveIncrease": {
    "post": {
      "description": "Make an exchange request to sell an exchangeable currency. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=currencyReserveIncrease&currency=59874174313362984554&amountPerUnitTQT=80000000'
      <p>
      Note: An additional amountPerUnitTQT * reserveSupply TQT (beyond what has previously been reserved) will be locked until the issuanceHeight is reached.
      Upon issuance, if the currency is claimable the TQT will remain locked until claimed; otherwise the TQT will transfer to the issuing account.
      Also upon issuance, a portion of the reserveSupply QNT will be transfered to each reserving account in proportion to the TQT that was contributed.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "currencyReserveIncrease",
          "required": true,
          "type": "string",
          "default": "currencyReserveIncrease"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "amountPerUnitTQT",
          "in": "query",
          "description": "the additional amount (in TQT per QNT of reserveSupply) to reserve (refer to Issue Currency)",
          "required": true,
          "type": "string",
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/currencyReserveClaim": {
    "post": {
      "description": "Claim currency reserve. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=currencyReserveClaim&currency=59874174313362984554&amountPerUnitTQT=80000000'
      <p>
      Note: Holders of a claimable currency may claim the locked TQT backing their units, thus reducing the supply of the currency.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "currencyReserveClaim",
          "required": true,
          "type": "string",
          "default": "currencyReserveClaim"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the amount (in QNT) of reserve currency to claim",
          "required": true,
          "type": "string",
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/deleteCurrency": {
    "post": {
      "description": "Delete a deletable currency (refer to Can Delete Currency). POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=deleteCurrency&currency=59874174313362984554'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "deleteCurrency",
          "required": true,
          "type": "string",
          "default": "deleteCurrency"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllCurrencies": {
    "get": {
      "description": "Get all currencies in reverse creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllCurrencies'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllCurrencies",
          "required": true,
          "type": "string",
          "default": "getAllCurrencies"
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCounts",
          "in": "query",
          "description": "true to include count fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAllExchanges": {
    "get": {
      "description": "Get all currency exchanges in reverse chronological order.<br>
      curl
      'http://localhost:23457/api?requestType=getAllExchanges'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAllExchanges",
          "required": true,
          "type": "string",
          "default": "getAllExchanges"
        }
        ,
        {
          "name": "timestamp",
          "in": "query",
          "description": "the earliest timestamp to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCurrencyInfo",
          "in": "query",
          "description": "true to include some currency details (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAvailableToBuy": {
    "get": {
      "description": "Calculates the rate required in order to completely fill an exchange request.<br>
      curl
      'http://localhost:23457/api?requestType=getAvailableToBuy&currency=5845421548452654'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAvailableToBuy",
          "required": true,
          "type": "string",
          "default": "getAvailableToBuy"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the number of units to buy",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getAvailableToSell": {
    "get": {
      "description": "Calculates the rate required in order to completely fill an exchange request.<br>
      curl
      'http://localhost:23457/api?requestType=getAvailableToSell&currency=5845421548452654'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getAvailableToSell",
          "required": true,
          "type": "string",
          "default": "getAvailableToSell"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the number of units to sell",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getBuyOffers": {
    "get": {
      "description": "Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getBuyOffers&currency=5845421548452654'
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getBuyOffers",
          "required": true,
          "type": "string",
          "default": "getBuyOffers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "availableOnly",
          "in": "query",
          "description": "true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "sortByRate",
          "in": "query",
          "description": "true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getSellOffers": {
    "get": {
      "description": "Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getSellOffers&currency=5845421548452654'
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getSellOffers",
          "required": true,
          "type": "string",
          "default": "getSellOffers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "availableOnly",
          "in": "query",
          "description": "true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "sortByRate",
          "in": "query",
          "description": "true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedBuyOffers": {
    "get": {
      "description": "Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedBuyOffers&currency=5845421548452654'
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExpectedBuyOffers",
          "required": true,
          "type": "string",
          "default": "getExpectedBuyOffers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "availableOnly",
          "in": "query",
          "description": "true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "sortByRate",
          "in": "query",
          "description": "true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedSellOffers": {
    "get": {
      "description": "Get currency buy or sell offers given a currency ID and/or an account ID in order of rate (if sortByRate is true for expected offers, otherwise in the expected order of execution).<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedSellOffers&currency=5845421548452654'
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExpectedSellOffers",
          "required": true,
          "type": "string",
          "default": "getExpectedSellOffers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "availableOnly",
          "in": "query",
          "description": "true to include only offers with non-zero supply and limit, but is ignored when both currency and account are given (optional, does not apply to expected offers)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "sortByRate",
          "in": "query",
          "description": "true to sort by rate (optional, applies only to expected offers, which are returned in expected order of execution by default)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last offer to retrieve (optional, does not apply to expected offers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrency": {
    "get": {
      "description": "Get the details of a currency.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrency&currency=5845421548452654'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrency",
          "required": true,
          "type": "string",
          "default": "getCurrency"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": " the currency ID (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "code",
          "in": "query",
          "description": "he currency code (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCounts",
          "in": "query",
          "description": "true to include count fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencies": {
    "get": {
      "description": "Get currencies given multiple currency IDs.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrency&currencies=5845421548452654'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencies",
          "required": true,
          "type": "string",
          "default": "getCurrencies"
        }
        ,
        {
          "name": "currencies",
          "in": "query",
          "description": "one of multiple currency IDs",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "includeCounts",
          "in": "query",
          "description": "true to include count fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencyFounders": {
    "get": {
      "description": "Get a reservable currency's founders.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrencyFounders&currency=5845421548452654'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencies",
          "required": true,
          "type": "string",
          "default": "getCurrencies"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "an account ID (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first founder to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last founder to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencyIds": {
    "get": {
      "description": "Get all currency IDs in reverse chronological creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrencyIds'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencyIds",
          "required": true,
          "type": "string",
          "default": "getCurrencyIds"
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrenciesByIssuer": {
    "get": {
      "description": "Get currencies issued by multiple accounts in reverse creation order.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrenciesByIssuer&account=XIN-LHG8-88PJ-A5K9-2NRMB'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrenciesByIssuer",
          "required": true,
          "type": "string",
          "default": "getCurrenciesByIssuer"
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "one of multiple account IDs",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "includeCounts",
          "in": "query",
          "description": "true if numberOf... fields are to be included (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencyAccounts": {
    "get": {
      "description": "Get the accounts that hold a given currency in reverse units order.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrencyAccounts&currency=56415643515645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencyAccounts",
          "required": true,
          "type": "string",
          "default": "getCurrencyAccounts"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "height",
          "in": "query",
          "description": "the blockchain height at which the response applies (optional, default is current height)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last currency to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencyAccountCount": {
    "get": {
      "description": "Get the number of accounts that hold a given currency.<br>
      curl
      'http://localhost:23457/api?requestType=getCurrencyAccountCount&currency=56415643515645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencyAccountCount",
          "required": true,
          "type": "string",
          "default": "getCurrencyAccountCount"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "height",
          "in": "query",
          "description": "the blockchain height at which the response applies (optional, default is current height)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getCurrencyTransfers": {
    "get": {
      "description": "Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers).<br>
      curl
      'http://localhost:23457/api?requestType=getCurrencyTransfers&currency=56415643515645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getCurrencyTransfers",
          "required": true,
          "type": "string",
          "default": "getCurrencyTransfers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "timestamp",
          "in": "query",
          "description": "the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCurrencyInfo",
          "in": "query",
          "description": "true to include additional currency info fields (optional, does not apply to expected transfers)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first transfer to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last transfer to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExpectedCurrencyTransfers": {
    "get": {
      "description": "Get currency transfers given a currency ID and/or an account ID in reverse block height order (or in expected order of execution for expected transfers).<br>
      curl
      'http://localhost:23457/api?requestType=getExpectedCurrencyTransfers&currency=56415643515645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExpectedCurrencyTransfers",
          "required": true,
          "type": "string",
          "default": "getExpectedCurrencyTransfers"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "timestamp",
          "in": "query",
          "description": "the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first transfer to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last transfer to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExchanges": {
    "get": {
      "description": "Get currency exchanges given a currency and/or an account in reverse chronological order.<br>
      curl
      'http://localhost:23457/api?requestType=getExchanges&currency=56415643515645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExchanges",
          "required": true,
          "type": "string",
          "default": "getExchanges"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "account",
          "in": "query",
          "description": "the account ID (optional if currency provided)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "timestamp",
          "in": "query",
          "description": "the earliest transfer (in seconds since the genesis block) to retrieve (optional, does not apply to expected transfers)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCurrencyInfo",
          "in": "query",
          "description": "true to include several currency-related fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExchangesByExchangeRequest": {
    "get": {
      "description": "Get currency exchanges given an exchange request transaction ID in reverse chronological order.<br>
      curl
      'http://localhost:23457/api?requestType=getExchangesByExchangeRequest&transaction=5645648675645645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExchangesByExchangeRequest",
          "required": true,
          "type": "string",
          "default": "getExchangesByExchangeRequest"
        }
        ,
        {
          "name": "transaction",
          "in": "query",
          "description": "the transaction ID of the exchange request",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "includeCurrencyInfo",
          "in": "query",
          "description": "true to include several currency-related fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getExchangesByOffer": {
    "get": {
      "description": "Get currency exchanges given a currency offer ID in reverse chronological order.<br>
      curl
      'http://localhost:23457/api?requestType=getExchangesByOffer&offer=5645648675645645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getExchangesByOffer",
          "required": true,
          "type": "string",
          "default": "getExchangesByOffer"
        }
        ,
        {
          "name": "offer",
          "in": "query",
          "description": "a currency offer ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCurrencyInfo",
          "in": "query",
          "description": "true to include several currency-related fields (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getLastExchanges": {
    "get": {
      "description": "Get the last exchange of each of multiple currencies.<br>
      curl
      'http://localhost:23457/api?requestType=getLastExchanges&currencies=5645648675645645645'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getLastExchanges",
          "required": true,
          "type": "string",
          "default": "getLastExchanges"
        }
        ,
        {
          "name": "currencies",
          "in": "query",
          "description": "one of multiple currency IDs",
          "required": true,
          "type": "string",
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/getOffer": {
    "get": {
      "description": "Get offer details given an offer ID.<br>
      curl
      'http://localhost:23457/api?requestType=getOffer&offer=5456812154845454'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "getOffer",
          "required": true,
          "type": "string",
          "default": "getOffer"
        }
        ,
        {
          "name": "offer",
          "in": "query",
          "description": "a currency offer ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/issueCurrency": {
    "post": {
      "description": "Issue a new currency or re-issue an existing currency with different properties. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=issueCurrency'
      <p>
      Notes: Reservable requires exchangeable and/or claimable, as does controllable; but mintable requires exchangeable.
      Claimable requires reservable, non-mintable and zero initialSupply.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "issueCurrency",
          "required": true,
          "type": "string",
          "default": "issueCurrency"
        }
        ,
        {
          "name": "name",
          "in": "query",
          "description": "the currency name, 3 to 10 characters and longer than the currency code",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "code",
          "in": "query",
          "description": "the uppercase currency code",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "description",
          "in": "query",
          "description": "the currency description",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "type",
          "in": "query",
          "description": "the currency type bitmask, from least to most significant bit: exchangeable, controllable, reservable, claimable, non-shuffleable",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "initialSupply",
          "in": "query",
          "description": "the initial currency supply (in QNT) (must match maxSupply unless claimable, must be zero for claimable)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "reserveSupply",
          "in": "query",
          "description": "the reserve currency supply (in QNT) (must match maxSupply)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "maxSupply",
          "in": "query",
          "description": "the maximum currency supply (in QNT)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "issuanceHeight",
          "in": "query",
          "description": "the blockchain height at which a reservable currency is issued if the reserve minimum is met",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "minReservePerUnitTQT",
          "in": "query",
          "description": "the minimum currency reserve (in TQT per QNT of reserveSupply) for issuance of a reservable currency",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "decimals",
          "in": "query",
          "description": "the number of decimal places used by the currency (optional, default zero)",
          "required": true,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/publishExchangeOffer": {
    "post": {
      "description": "Publish an exchange offer for an exchangeable currency. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=publishExchangeOffer'
      <p>
      Notes: Each time currency is bought in response to an exchange request to sell currency (refer to Currency Sell),
      totalBuyLimit is reduced and the supply of currency offered to sell increases by the amount bought. When totalBuyLimit
      becomes zero, the buy offer is withdrawn. These same notes apply if buy and sell are interchanged. Only the most recent
      offer associated with an account is valid, even if an earlier offer by that account has not yet expired or reached its limits.
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "publishExchangeOffer",
          "required": true,
          "type": "string",
          "default": "publishExchangeOffer"
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "the currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "buyRateTQT",
          "in": "query",
          "description": "the offered buy rate (in TQT per QNT)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "sellRateTQT",
          "in": "query",
          "description": "the offered sell rate (in TQT per QNT)",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "totalBuyLimit",
          "in": "query",
          "description": "the cumulative limit (in QNT) of currency buys",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "totalSellLimit",
          "in": "query",
          "description": "the cumulative limit (in QNT) of currency sells",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "initialBuySupply",
          "in": "query",
          "description": "the initial amount (in QNT) of currency offered to buy, cannot exceed totalBuyLimit",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "initialSellSupply",
          "in": "query",
          "description": "the initial amount (in QNT) of currency offered to sell, cannot exceed totalSellLimit",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "expirationHeight",
          "in": "query",
          "description": "the blockchain height for expiration of the offer",
          "required": true,
          "type": "string",
        }


      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/searchCurrencies": {
    "get": {
      "description": "Get currencies having a code that matches a given query in reverse relevance order.<br>
      curl
      'http://localhost:23457/api?requestType=searchCurrencies&query=test'
      <p>

      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "searchCurrencies",
          "required": true,
          "type": "string",
          "default": "searchCurrencies"
        }
        ,
        {
          "name": "query",
          "in": "query",
          "description": "a full text query on the currency field code in the standard Lucene syntax",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "firstIndex",
          "in": "query",
          "description": "a zero-based index to the first exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "lastIndex",
          "in": "query",
          "description": "a zero-based index to the last exchange to retrieve (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "includeCounts",
          "in": "query",
          "description": "true if the fields beginning with numberOf are to be included (optional)",
          "required": false,
          "type": "boolean",
        }
        ,
        {
          "name": "requireBlock",
          "in": "query",
          "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }
        ,
        {
          "name": "requireLastBlock",
          "in": "query",
          "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
          "required": false,
          "type": "string",
        }

      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }
  ,
  "/transferCurrency": {
    "post": {
      "description": "Transfer currency to a given recipient. POST only.<br>
      curl
      -X POST
      'http://localhost:23457/api?requestType=transferCurrency&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&currency=54564564564414456456&units=10'
      ",
      "tags": [
        "Currencies"
      ],
      "parameters": [
        {
          "name": "requestType",
          "in": "query",
          "description": "transferCurrency",
          "required": true,
          "type": "string",
          "default": "transferCurrency"
        }
        ,
        {
          "name": "recipient",
          "in": "query",
          "description": "the account ID of the transfer recipient",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "currency",
          "in": "query",
          "description": "he currency ID",
          "required": true,
          "type": "string",
        }
        ,
        {
          "name": "units",
          "in": "query",
          "description": "the amount (in QNT) of the transfer",
          "required": true,
          "type": "string",
        }
      ],
      "responses": {
        "200": {
          "description": "",
          "examples": {}
        }
      }
    }
  }


















   ,
   "/startForging": {
     "post": {
       "description": "Start forging (Block generation)). POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=startForging&secretPhrase=YourSecretPhrase'
       ",
       "tags": [
         "Forging"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "startForging",
           "required": true,
           "type": "string",
           "default": "startForging"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "Is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/stopForging": {
     "post": {
       "description": "Stop forging (Block generation)). POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=stopForging&secretPhrase=YourSecretPhrase'
       ",
       "tags": [
         "Forging"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "stopForging",
           "required": true,
           "type": "string",
           "default": "stopForging"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "Is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getForging": {
     "post": {
       "description": "Get forging (Block generation) to check if an account is foring blocks. POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=getForging&secretPhrase=YourSecretPhrase'
       ",
       "tags": [
         "Forging"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getForging",
           "required": true,
           "type": "string",
           "default": "getForging"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "Is the secret passphrase of the account (optional for stopForging and getForging if password protected like the Debug Operations)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/leaseBalance": {
     "post": {
       "description": "Lease the entire guaranteed balance of XIN to another account, after 1440 confirmations. POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=leaseBalance&period=1440&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Forging"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "leaseBalance",
           "required": true,
           "type": "string",
           "default": "leaseBalance"
         },
         {
           "name": "period",
           "in": "query",
           "description": "Is the lease period (in number of blocks, 1440 minimum)",
           "required": true,
           "type": "integer"
         },
         {
           "name": "recipient",
           "in": "query",
           "description": "Is the lessee (recipient) account",
           "required": true,
           "type": "string"
         },
         {
           "name": "recipientPublicKey",
           "in": "query",
           "description": "Is the public key of the lessee (recipient) account (optional, enhances security of a new account)",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/decodeToken": {
     "get": {
       "description": "Validate a token without requiring the transmission of a secret passphrase.<br>
       curl
       'http://localhost:23457/api?requestType=decodeToken&secretPhrase=YourSecretPhrase&website=test&token=hsdkjfhsd98fsdhfsdhuf4hdsjhf78ehu...'
       ",
       "tags": [
         "Token"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "decodeToken",
           "required": true,
           "type": "string",
           "default": "decodeToken"
         },
         {
           "name": "website",
           "in": "query",
           "description": "The signed text, typically an authorized URL",
           "required": true,
           "type": "string"
         },
         {
           "name": "token",
           "in": "query",
           "description": "The token generated by Generate Token",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/generateFileToken": {
     "post": {
       "description": "Generate a file token. POST only.<br>
       curl
       -F
       requestType=generateFileToken -F file=@test.txt -F secretPhrase='secretPhrase' 'http://localhost:23457/api'
       ",
       "tags": [
         "Token"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "generateFileToken",
           "required": true,
           "type": "string",
           "default": "generateFileToken"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "The passphrase of the account generating the token",
           "required": true,
           "type": "string"
         },
         {
           "name": "file",
           "in": "query",
           "description": "The path to the file to be signed",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/generateToken": {
     "post": {
       "description": "Generate a file token. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=generateToken&secretPhrase=YourSecretPhrase&website=testwebsite'
       ",
       "tags": [
         "Token"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "generateToken",
           "required": true,
           "type": "string",
           "default": "generateToken"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "The passphrase of the account generating the token",
           "required": true,
           "type": "string"
         },
         {
           "name": "website",
           "in": "query",
           "description": "A web site URL for which authorization should be granted, or general text to be digitally signed",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/decodeFileToken": {
     "post": {
       "description": "Validate a file token without requiring the transmission of a secret passphrase. POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=decodeFileToken&secretPhrase=YourSecretPhrase&file=test.txt&token=hsdkjfhsd98fsdhfsdhuf4hdsjhf78ehu...'
       ",
       "tags": [
         "Token"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "decodeFileToken",
           "required": true,
           "type": "string",
           "default": "decodeFileToken"
         },
         {
           "name": "file",
           "in": "query",
           "description": "The path to the file that was signed",
           "required": true,
           "type": "string"
         },
         {
           "name": "token",
           "in": "query",
           "description": "The token generated by Generate Token",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/addPeer": {
     "post": {
       "description": "Add a peer to the list of known peers and attempt to connect to it. Password protected like the Debug Operations. POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=addPeer&peer=127.0.0.1'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "addPeer",
           "required": true,
           "type": "string",
           "default": "addPeer"
         },
         {
           "name": "peer",
           "in": "query",
           "description": "The IP address or domain name of the peer (plus optional port)",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/blacklistPeer": {
     "post": {
       "description": "Blacklist a peer for the default blacklisting period. Password protected like the Debug Operations. POST only.<br>
       curl
       -X
       POST
       'http://localhost:23457/api?requestType=blacklistPeer&peer=127.0.0.1'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "blacklistPeer",
           "required": true,
           "type": "string",
           "default": "blacklistPeer"
         },
         {
           "name": "peer",
           "in": "query",
           "description": "The IP address or domain name of the peer (plus optional port)",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getInboundPeers": {
     "get": {
       "description": "Get all peers that have sent a request to this peer in the last 30 minutes.<br>
       curl
       'http://localhost:23457/api?requestType=getInboundPeers&includePeerInfo=true'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getInboundPeers",
           "required": true,
           "type": "string",
           "default": "getInboundPeers"
         },
         {
           "name": "includePeerInfo",
           "in": "query",
           "description": "True to include peer information, otherwise include only the address (optional)",
           "required": false,
           "type": "boolean"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getMyInfo": {
     "get": {
       "description": "Get hostname and address of the requesting node.<br>
       curl
       'http://localhost:23457/api?requestType=getMyInfo'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getMyInfo",
           "required": true,
           "type": "string",
           "default": "getMyInfo"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPeer": {
     "get": {
       "description": "Get information about a given peer.<br>
       curl
       'http://localhost:23457/api?requestType=getPeer&peer=127.0.0.1'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPeer",
           "required": true,
           "type": "string",
           "default": "getPeer"
         },
         {
           "name": "peer",
           "in": "query",
           "description": "The IP address or domain name of the peer (plus optional port)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPeers": {
     "get": {
       "description": "Get a list of peer IP addresses.<br>
       curl
       'http://localhost:23457/api?requestType=getPeers'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPeers",
           "required": true,
           "type": "string",
           "default": "getPeers"
         },
         {
           "name": "active",
           "in": "query",
           "description": "True for active",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "state",
           "in": "query",
           "description": "The state of the peers (NON_CONNECTED, CONNECTED, or DISCONNECTED)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "includePeerInfo",
           "in": "query",
           "description": "True to include peer detail as in Get Peer",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "service",
           "in": "query",
           "description": "Filter on a specific service",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/dumpPeers": {
     "get": {
       "description": "Get all active peers, optionally of a certain version or a minimum weight.<br>
       curl
       'http://localhost:23457/api?requestType=dumpPeers'
       ",
       "tags": [
         "Networking"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "dumpPeers",
           "required": true,
           "type": "string",
           "default": "dumpPeers"
         },
         {
           "name": "version",
           "in": "query",
           "description": "A version filter (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "weight",
           "in": "query",
           "description": "A minimum weight filter such as 1000 (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "connect",
           "in": "query",
           "description": "True to force a connection attempt to each known peer first (optional); password protected like the Debug Operations if true",
           "required": false,
           "type": "boolean"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/getBlockchainStatus": {
     "get": {
       "description": "Get the blockchain status.<br>
       curl
       'http://localhost:23457/api?requestType=getBlockchainStatus'
       ",
       "tags": [
         "Server"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getBlockchainStatus",
           "required": true,
           "type": "string",
           "default": "getBlockchainStatus"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getState": {
     "get": {
       "description": "Get the blockchain status.<br>
       curl
       'http://localhost:23457/api?requestType=getState'
       ",
       "tags": [
         "Server"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getState",
           "required": true,
           "type": "string",
           "default": "getState"
         }
         ,
         {
           "name": "includeCounts",
           "in": "query",
           "description": "True if the fields beginning with numberOf are to be included (optional); password protected like the Debug Operations if true.",
           "required": false,
           "type": "boolean"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getTime": {
     "get": {
       "description": "Get the current time.<br>
       curl
       'http://localhost:23457/api?requestType=getTime'
       ",
       "tags": [
         "Server"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getTime",
           "required": true,
           "type": "string",
           "default": "getTime"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/eventRegister": {
     "get": {
       "description": "Get the current time.<br>
       curl
       'http://localhost:23457/api?requestType=eventRegister'
       ",
       "tags": [
         "Server"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "eventRegister",
           "required": true,
           "type": "string",
           "default": "eventRegister"
         }
         ,
         {
           "name": "event",
           "in": "query",
           "description": "One of multiple server events from the following list of event names: (optional, default is all possible events)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "add",
           "in": "query",
           "description": "True to add events to an existing listener (optional, omit if remove is true)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "remove",
           "in": "query",
           "description": "True to remove events from an existing listener (optional, omit if add is true)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         },
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/eventWait": {
     "post": {
       "description": "Wait for events registered with Event Register. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=eventWait'
       ",
       "tags": [
         "Server"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "eventRegister",
           "required": true,
           "type": "string",
           "default": "eventRegister"
         }
         ,
         {
           "name": "timeout",
           "in": "query",
           "description": "The amount of time (in seconds) to wait for an event before the call returns (optional, default and maximum is the xin.apiEventTimeout property)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         },
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "Is the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }


   ,
   "/getAccountShufflings": {
     "get": {
       "description": "Retrieves info about shufflings for a specific account.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountShufflings&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountShufflings",
           "required": true,
           "type": "string",
           "default": "getAccountShufflings"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "The account ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "True to include completed shufflings (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "includeHoldingInfo",
           "in": "query",
           "description": "True to include holding info (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "Zero-based index to the first data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "Zero-based index to the last data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "The block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "The block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }


       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAllShufflings": {
     "get": {
       "description": "Retrieves info about all shufflings.<br>
       curl
       'http://localhost:23457/api?requestType=getAllShufflings'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAllShufflings",
           "required": true,
           "type": "string",
           "default": "getAllShufflings"
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "true to include completed shufflings (optional)",
           "required": true,
           "type": "boolean"
         }
         ,
         {
           "name": "finishedOnly",
           "in": "query",
           "description": "True to omit not yet finished shufflings (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "includeHoldingInfo",
           "in": "query",
           "description": "True to include holding info (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "Zero-based index to the first data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "Zero-based index to the last data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "The block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "The block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }


       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAssignedShufflings": {
     "get": {
       "description": "Retrieves info about a shufflings that are currently assigned to a specific account.<br>
       curl
       'http://localhost:23457/api?requestType=getAssignedShufflings&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAssignedShufflings",
           "required": true,
           "type": "string",
           "default": "getAssignedShufflings"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "includeHoldingInfo",
           "in": "query",
           "description": "True to include holding info (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "Zero-based index to the first data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "Zero-based index to the last data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "The block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "The block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }


       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getHoldingShufflings": {
     "get": {
       "description": "Retrieves info about shufflings for a specific holding and/or stage.<br>
       curl
       'http://localhost:23457/api?requestType=getHoldingShufflings&holding=95344659763748848773'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getHoldingShufflings",
           "required": true,
           "type": "string",
           "default": "getHoldingShufflings"
         }
         ,
         {
           "name": "holding",
           "in": "query",
           "description": "is the holding ID (optional)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "stage",
           "in": "query",
           "description": "the stage of the shuffling (See Get Constants for type definitions) (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "true to include completed shufflings (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "Zero-based index to the first data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "Zero-based index to the last data to retrieve (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "The block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "The block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }


       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getShufflers": {
     "get": {
       "description": "Retrieves info about active shufflers on the current node.<br>
       curl
       'http://localhost:23457/api?requestType=getShufflers&secretPhrase=YourSecretPhrase'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getShufflers",
           "required": true,
           "type": "string",
           "default": "getShufflers"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "is the account ID (optional)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "shufflingFullHash",
           "in": "query",
           "description": "shuffling full hash (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "secret phrase of the account doing the shuffling (required if adminPassword is not provided)",
           "required": true,
           "type": "boolean"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "the admin password (required if secretPhrase is not provided)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "includeParticipantState",
           "in": "query",
           "description": "include each shuffling participant's state (optional)",
           "required": false,
           "type": "boolean"
         }

       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getShuffling": {
     "get": {
       "description": "Retrieves info about a shuffling.<br>
       curl
       'http://localhost:23457/api?requestType=getShuffling&shuffling=4346177818359600132'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getShuffling",
           "required": true,
           "type": "string",
           "default": "getShuffling"
         }
         ,
         {
           "name": "shuffling",
           "in": "query",
           "description": "the shuffling ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "includeHoldingInfo",
           "in": "query",
           "description": "true to include holding info (optional)",
           "required": false,
           "type": "boolean"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getShufflingParticipants": {
     "get": {
       "description": "Retrieves info about participants in a shuffling.<br>
       curl
       'http://localhost:23457/api?requestType=getShufflingParticipants&shuffling=4346177818359600132'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getShufflingParticipants",
           "required": true,
           "type": "string",
           "default": "getShufflingParticipants"
         }
         ,
         {
           "name": "shuffling",
           "in": "query",
           "description": "the shuffling ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "registered is true if the operation completed successfully",
           "examples": {}
         }
       }
     }
   }
   ,
   "/stopShuffler": {
     "get": {
       "description": "Stops a previously started automated Shuffler.<br>
       curl
       'http://localhost:23457/api?requestType=stopShuffler&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "stopShuffler",
           "required": true,
           "type": "string",
           "default": "stopShuffler"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID (optional if shufflingFullHash or secretPhrase or adminPassword is provided)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "shufflingFullHash",
           "in": "query",
           "description": "the full hash of the shuffling (optional if account or adminPassword is provided)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret phrase of the account entering the shuffling (optional if adminPassword is provided)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "the admin password (optional if secretPhrase is provided)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/startShuffler": {
     "get": {
       "description": "Starts a automated Shuffler. Once started, the Shuffler monitors the blockchain state for transactions relevant to the specified shuffle,
       and automatically submits the required transactions on behalf of the user, performing shuffle processing, verification, or cancellation as needed.<br>
       curl
       'http://localhost:23457/api?requestType=startShuffler&secretPhrase=secretPhrase&recipientSecretPhrase=recipientSecretPhrase&shufflingFullHash=d77828eb6e7548f62e48de83f58...'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "startShuffler",
           "required": true,
           "type": "string",
           "default": "startShuffler"
         }
         ,
         {
           "name": "shufflingFullHash",
           "in": "query",
           "description": "the full hash of the shuffling (optional if account or adminPassword is provided)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret phrase of the account entering the shuffling",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "recipientSecretPhrase",
           "in": "query",
           "description": "the secret phrase of the recipient account (optional if recipientPublicKey is present)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "recipientPublicKey",
           "in": "query",
           "description": "the public key of the recipient account (optional if recipientSecretPhrase is present)",
           "required": false,
           "type": "string"
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shufflingCancel": {
     "get": {
       "description": "Cancels a shuffling.<br>
       curl
       'http://localhost:23457/api?requestType=shufflingCancel&shuffling=44660700617510&shufflingStateHash=0918374087102938470198...'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shufflingCancel",
           "required": true,
           "type": "string",
           "default": "shufflingCancel"
         }
         ,
         {
           "name": "shuffling",
           "in": "query",
           "description": "The shuffling ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "shufflingStateHash",
           "in": "query",
           "description": "the state hash of the shuffling",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "cancellingAccount",
           "in": "query",
           "description": "the account ID (optional)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shufflingVerify": {
     "get": {
       "description": "Sends a verification that an account's recipient public key is found within a shuffling.<br>
       curl
       'http://localhost:23457/api?requestType=shufflingVerify&shuffling=44660700617510&shufflingStateHash=0918374087102938470198&recipientSecretPhrase=recipientSecretPhrase&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shufflingVerify",
           "required": true,
           "type": "string",
           "default": "shufflingVerify"
         }
         ,
         {
           "name": "shuffling",
           "in": "query",
           "description": "The shuffling ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "shufflingStateHash",
           "in": "query",
           "description": "the state hash of the shuffling",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "recipientSecretPhrase",
           "in": "query",
           "description": "the secret phrase of the recipient account (optional if recipientPublicKey is present)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret phrase of the account entering the shuffling",
           "required": true,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shufflingProcess": {
     "get": {
       "description": "Manually process the shuffling for a specific participant. Note that the shuffling must be in processing stage and the secretPhrase must match the current shuffling assignee.<br>
       curl
       'http://localhost:23457/api?requestType=shufflingVerify&shuffling=44660700617510&recipientSecretPhrase=recipientSecretPhrase&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shufflingProcess",
           "required": true,
           "type": "string",
           "default": "shufflingProcess"
         }
         ,
         {
           "name": "shuffling",
           "in": "query",
           "description": "The shuffling ID",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "recipientSecretPhrase",
           "in": "query",
           "description": "the secret phrase of the recipient account (optional if recipientPublicKey is present)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "recipientPublicKey",
           "in": "query",
           "description": "the public key of the recipient account (optional if recipientSecretPhrase is provided)",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shufflingRegister": {
     "get": {
       "description": "Registers a new participant to an existing shuffling. The shuffling must be in stage registration.<br>
       curl
       'http://localhost:23457/api?requestType=shufflingRegister&shufflingFullHash=2d10f4e18f808aa8d0de06d5cddcd77828eb6e7548f62e48de83f58fdf0629d5&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shufflingRegister",
           "required": true,
           "type": "string",
           "default": "shufflingRegister"
         }
         ,
         {
           "name": "shufflingFullHash",
           "in": "query",
           "description": "the full hash of the shuffling to register",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret phrase of the account entering the shuffling",
           "required": false,
           "type": "string"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shufflingCreate": {
     "get": {
       "description": "Registers a new participant to an existing shuffling. The shuffling must be in stage registration.<br>
       curl
       'http://localhost:23457/api?requestType=shufflingCreate&amount=10000000000&participantCount=5&registrationPeriod=1440&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Shuffling"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shufflingCreate",
           "required": true,
           "type": "string",
           "default": "shufflingCreate"
         }
         ,
         {
           "name": "holding",
           "in": "query",
           "description": "the holding id (optional if holdingType is 0)",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "holdingType",
           "in": "query",
           "description": "the holding type (See Get Constants for type definitions) (optional)",
           "required": false,
           "type": "string"
         }
         ,
         {
           "name": "amount",
           "in": "query",
           "description": "the amount of the holding to shuffle",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "participantCount",
           "in": "query",
           "description": "the number of participants",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "registrationPeriod",
           "in": "query",
           "description": "the number of blocks the participants have to register until the shuffle is cancelled",
           "required": true,
           "type": "string"
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret phrase of the account entering the shuffling",
           "required": false,
           "type": "string"
         }






       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }


   ,
   "/decodeQRCode": {
     "post": {
       "description": "Decodes a base64-encoded jpeg to a UTF-8 string. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=decodeQRCode&qrCodeBase64=AgGBgcGBQgHBwcJCQgKDBQNDAs...'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "decodeQRCode",
           "required": true,
           "type": "string",
           "default": "decodeQRCode"
         }
         ,
         {
           "name": "qrCodeBase64",
           "in": "query",
           "description": "A base64-encoded jpeg string to be decoded",
           "required": true,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/encodeQRCode": {
     "post": {
       "description": "Encodes a UTF-8 string to a base64-encoded jpeg. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=encodeQRCode&qrCodeData=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "encodeQRCode",
           "required": true,
           "type": "string",
           "default": "encodeQRCode"
         }
         ,
         {
           "name": "qrCodeData",
           "in": "query",
           "description": " a UTF-8 text string to be encoded",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "width",
           "in": "query",
           "description": " the width of the output image (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "height",
           "in": "query",
           "description": "is the height of the output image (optional)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/fullHashToId": {
     "get": {
       "description": "Converts a full hash to an ID.<br>
       curl
       'http://localhost:23457/api?requestType=fullHashToId&fullHash=f8f1509e3be79c4562e24125ff2a8f026871fdd1a0366ad315bf8...'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "fullHashToId",
           "required": true,
           "type": "string",
           "default": "fullHashToId"
         }
         ,
         {
           "name": "fullHash",
           "in": "query",
           "description": "the full hash 64-digit (32-byte) hex string",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/longConvert": {
     "get": {
       "description": "Converts an ID to the signed long integer representation used internally.<br>
       curl
       'http://localhost:23457/api?requestType=longConvert&id=45526172282528158156'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "longConvert",
           "required": true,
           "type": "string",
           "default": "longConvert"
         }
         ,
         {
           "name": "id",
           "in": "query",
           "description": "a numerical ID, in decimal form but equivalent to an 8-byte unsigned integer as produced by SHA-256 hashing",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/hexConvert": {
     "get": {
       "description": "Converts a text string into a UTF-8 hex string and if the text input is already a hex string, also into text.<br>
       curl
       'http://localhost:23457/api?requestType=hexConvert&string=8978957498768'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "hexConvert",
           "required": true,
           "type": "string",
           "default": "hexConvert"
         }
         ,
         {
           "name": "string",
           "in": "query",
           "description": "a text string, possibly a hex string",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/rsConvert": {
     "get": {
       "description": "Get both the Reed-Solomon account address and the account number given an account ID.<br>
       curl
       'http://localhost:23457/api?requestType=rsConvert&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "rsConvert",
           "required": true,
           "type": "string",
           "default": "rsConvert"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "an account ID (either RS address or number)",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/hash": {
     "get": {
       "description": "Calculates the hash of a secret for use in phased transactions with voting model 5 (Vote By Secret).<br>
       curl
       'http://localhost:23457/api?requestType=hash&hashAlgorithm=2&secret=MySecretText'
       <p>
       Note: secret is converted from a hex string to a byte array, which is what the hash algorithm expects, unless secretIsText is true, in which case secret is first converted from text to a UTF-8 hex string as by Hex Convert.
       ",
       "tags": [
         "Utilities"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "hash",
           "required": true,
           "type": "string",
           "default": "hash"
         }
         ,
         {
           "name": "hashAlgorithm",
           "in": "query",
           "description": "the hash function used: 2 for SHA256, 3 for SHA3, 5 for SCRYPT, 6 for RIPEMD160, 25 for Keccack25 and 62 for SHA256 followed by RIPEMD160",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "secret",
           "in": "query",
           "description": "a secret phrase in text form or hex string form",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "secretIsText",
           "in": "query",
           "description": "true if secret is text, false if it is a hex string (optional)",
           "required": false,
           "type": "boolean",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/GetAllBroadcastedTransactions": {
     "get": {
       "description": "Get unconfirmed transactions broadcasted from this node but not yet received back from a peer, if transaction rebroadcasting is enabled.<br>
       curl
       'http://localhost:23457/api?requestType=GetAllBroadcastedTransactions'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "GetAllBroadcastedTransactions",
           "required": true,
           "type": "string",
           "default": "GetAllBroadcastedTransactions"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/fullReset": {
     "post": {
       "description": "Deletes the entire blockchain. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=fullReset'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "fullReset",
           "required": true,
           "type": "string",
           "default": "fullReset"
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getLog": {
     "get": {
       "description": "Get up to 100 of the most recent log messages from a memory buffer.<br>
       curl
       'http://localhost:23457/api?requestType=getLog'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getLog",
           "required": true,
           "type": "string",
           "default": "getLog"
         }
         ,
         {
           "name": "count",
           "in": "query",
           "description": "the number of messages to return (optional, default 100)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getStackTraces": {
     "get": {
       "description": "Get the stack traces of the currently running threads in reverse id order.<br>
       curl
       'http://localhost:23457/api?requestType=getStackTraces'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getStackTraces",
           "required": true,
           "type": "string",
           "default": "getStackTraces"
         }
         ,
         {
           "name": "depth",
           "in": "query",
           "description": "the maximum trace depth to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/RebroadcastUnconfirmedTransactions": {
     "post": {
       "description": "Rebroadcast transactions in the unconfirmed pool to peers, until received back or found in the blockchain.
       Rebroadcasting can be disabled by setting the xin.enableTransactionRebroadcasting property to false. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=RebroadcastUnconfirmedTransactions'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "RebroadcastUnconfirmedTransactions",
           "required": true,
           "type": "string",
           "default": "RebroadcastUnconfirmedTransactions"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/requeueUnconfirmedTransactions": {
     "post": {
       "description": "Requeue unconfirmed transactions. POST only.<br>
       curl
       'http://localhost:23457/api?requestType=requeueUnconfirmedTransactions'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "requeueUnconfirmedTransactions",
           "required": true,
           "type": "string",
           "default": "requeueUnconfirmedTransactions"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/shutdown": {
     "post": {
       "description": "Shutdown the server. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=shutdown'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "shutdown",
           "required": true,
           "type": "string",
           "default": "shutdown"
         }
         ,
         {
           "name": "scan",
           "in": "query",
           "description": "true to truncate the derived tables and schedule a full rescan with validation on the next start (optional)",
           "required": false,
           "type": "boolean",
           "default": false
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/trimDerivedTables": {
     "post": {
       "description": "Trigger a derived tables trim, and a prunable tables pruning. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=trimDerivedTables'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "trimDerivedTables",
           "required": true,
           "type": "string",
           "default": "trimDerivedTables"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/clearUnconfirmedTransactions": {
     "post": {
       "description": "Empties the unconfirmed transaction pool. POST only.<br>
       curl
       'http://localhost:23457/api?requestType=clearUnconfirmedTransactions'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "clearUnconfirmedTransactions",
           "required": true,
           "type": "string",
           "default": "clearUnconfirmedTransactions"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/luceneReindex": {
     "post": {
       "description": "Forces a rebuild of the Lucene search index. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=luceneReindex'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "luceneReindex",
           "required": true,
           "type": "string",
           "default": "luceneReindex"
         }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/scan": {
     "post": {
       "description": "Forces a rebuild of the Lucene search index. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=scan'
       <p>
       Note: All debug utilities require an adminPassword request parameter. See Admin Password for more info.
       The derived object tables are rolled back and rebuilt by rescanning the existing blockchain. A request to rescan more
       than 1440 blocks when table trimming is enabled will do a full rescan starting from height 0.
       Rescan status is saved in the database, so that if a rescan is interrupted or fails it will resume on restart.
       ",
       "tags": [
         "Debug"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "scan",
           "required": true,
           "type": "string",
           "default": "scan"
         }
         ,
         {
           "name": "numBlocks",
           "in": "query",
           "description": "the number of blocks to scan at the top of the blockchain (optional)",
           "required": false,
           "type": "string"
         }
         ,
          {
            "name": "height",
            "in": "query",
            "description": "the height above which blockchain is to be scanned (optional if numBlocks provided)",
            "required": false,
            "type": "string"
          }
          ,
          {
            "name": "validate",
            "in": "query",
            "description": "true if signatures are to be re-verified and blocks and transactions re-validated (optional)",
            "required": false,
            "type": "string"
          }
         ,
         {
           "name": "adminPassword",
           "in": "query",
           "description": "String with the admin password (optional)",
           "required": false,
           "type": "string"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/getTransaction": {
     "get": {
       "description": "Calculates the hash of a secret for use in phased transactions with voting model 5 (Vote By Secret).<br>
       curl
       'http://localhost:23457/api?requestType=getTransaction'


       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getTransaction",
           "required": true,
           "type": "string",
           "default": "getTransaction"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "the transaction ID (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "fullHash",
           "in": "query",
           "description": "the full hash of the transaction (optional if transaction ID is provided)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "includePhasingResult",
           "in": "query",
           "description": "true to retrieve execution status of each phased transaction (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": " the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/broadcastTransaction": {
     "post": {
       "description": "Broadcast a transaction to the network. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=broadcastTransaction&transactionBytes=58e320bb49c4e81b4c2cf28b9f...'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "broadcastTransaction",
           "required": true,
           "type": "string",
           "default": "broadcastTransaction"
         }
         ,
         {
           "name": "transactionBytes",
           "in": "query",
           "description": "the bytecode of a signed transaction (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "transactionJSON",
           "in": "query",
           "description": "the transaction object (optional if transactionBytes provided)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/calculateFullHash": {
     "get": {
       "description": "Calculate the full hash of a transaction.<br>
       curl
       'http://localhost:23457/api?requestType=calculateFullHash&unsignedTransactionBytes=9698ff9a166427005ab98fbe9ca4ad62536...&signatureHash=138aa0a86fbbf8a9bf58c2be4f2a5b8f0f30...'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "calculateFullHash",
           "required": true,
           "type": "string",
           "default": "calculateFullHash"
         }
         ,
         {
           "name": "unsignedTransactionJSON",
           "in": "query",
           "description": "the unsigned transaction JSON object (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "unsignedTransactionBytes",
           "in": "query",
           "description": "the unsigned bytes of a transaction (optional if unsignedTransactionJSON is provided)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "signatureHash",
           "in": "query",
           "description": "a SHA-256 hash of the transaction signature",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getExpectedTransactions": {
     "get": {
       "description": "Returns the non-phased unconfirmed transactions expected to be included in the next block (only), plus the phased transactions scheduled to finish in that block (whether approved or not).<br>
       curl
       'http://localhost:23457/api?requestType=getExpectedTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getExpectedTransactions",
           "required": true,
           "type": "string",
           "default": "getExpectedTransactions"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "account ID (optional)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getReferencingTransactions": {
     "get": {
       "description": "Returns the non-phased unconfirmed transactions expected to be included in the next block (only),
       plus the phased transactions scheduled to finish in that block (whether approved or not).<br>
       curl
       'http://localhost:23457/api?requestType=getReferencingTransactions&transaction=2239833429154694574'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getReferencingTransactions",
           "required": true,
           "type": "string",
           "default": "getReferencingTransactions"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "transaction ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first block ID to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last block ID to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getTransactionBytes": {
     "get": {
       "description": "Get the bytecode of a transaction.<br>
       curl
       'http://localhost:23457/api?requestType=getTransactionBytes&transaction=2239833429154694574'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getReferencingTransactions",
           "required": true,
           "type": "string",
           "default": "getReferencingTransactions"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "transaction ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/parseTransaction": {
     "get": {
       "description": "Get a transaction object given a (signed or unsigned) transaction bytecode, or re-parse a transaction object. Verify the signature.<br>
       curl
       'http://localhost:23457/api?requestType=parseTransaction&transaction=2239833429154694574'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "parseTransaction",
           "required": true,
           "type": "string",
           "default": "parseTransaction"
         }
         ,
         {
           "name": "transactionBytes",
           "in": "query",
           "description": "the signed or unsigned bytecode of the transaction (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "transactionJSON",
           "in": "query",
           "description": "the transaction object (optional if transactionBytes is included)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/signTransaction": {
     "get": {
       "description": "Calculates the full hash, signature hash, and transaction ID of an unsigned transaction.<br>
       curl
       'http://localhost:23457/api?requestType=signTransaction&unsignedTransactionBytes=3a00510f09c34f225d425306e5be55a494...&secretPhrase=SecretPhrase'
       ",
       "tags": [
         "Transactions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "signTransaction",
           "required": true,
           "type": "string",
           "default": "signTransaction"
         }
         ,
         {
           "name": "unsignedTransactionJSON",
           "in": "query",
           "description": "the transactionJSON field of the transaction, without a signature subfield",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "unsignedTransactionBytes",
           "in": "query",
           "description": "the unsignedTransactionBytes field of the transaction (optional, if unsignedTransactionJSON provided)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "the secret passphrase of the signing account",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "validate",
           "in": "query",
           "description": "false to skip validation of the transaction bytes being signed (useful on nodes where the full blockchain is not downloaded)",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/approveTransaction": {
     "post": {
       "description": "Approve (vote for) a phased transaction. POST only.<br>
       curl
       -X POST
       'http://localhost:23457/api?requestType=approveTransaction&transactionFullHash=6cc50665675f00513e8c647288e0a668a78c4964c84d0de8f768b890&revealedSecretText=revealedSecretText&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "approveTransaction",
           "required": true,
           "type": "string",
           "default": "approveTransaction"
         }
         ,
         {
           "name": "transactionFullHash",
           "in": "query",
           "description": "the full hash of the transaction to be approved (may be used up to 10 times per API request)",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "revealedSecret",
           "in": "query",
           "description": "the secret phrase (required only for phasingVotingModel 5, refer to Create Phasing Poll)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "revealedSecretIsText",
           "in": "query",
           "description": "specifying whether revealedSecret is text or binary.",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccountPhasedTransactionCount": {
     "get": {
       "description": "Get the number of pending phased transactions associated with an account given the account ID.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountPhasedTransactionCount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountPhasedTransactionCount",
           "required": true,
           "type": "string",
           "default": "getAccountPhasedTransactionCount"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": " the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccountPhasedTransactions": {
     "get": {
       "description": "Get pending phased transactions associated with an account given the account ID in reverse chronological creation order.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountPhasedTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountPhasedTransactions",
           "required": true,
           "type": "string",
           "default": "getAccountPhasedTransactions"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": " the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first phased transaction to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last phased transaction to retrieve (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAssetPhasedTransactions": {
     "get": {
       "description": "Get pending phased transactions based on an asset in reverse chronological creation order. These transactions can be considered transaction approval requests.<br>
       curl
       'http://localhost:23457/api?requestType=getAssetPhasedTransactions&asset=14012153016645484545'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAssetPhasedTransactions",
           "required": true,
           "type": "string",
           "default": "getAssetPhasedTransactions"
         }
         ,
         {
           "name": "asset",
           "in": "query",
           "description": " the asset ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": " the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "withoutWhitelist",
           "in": "query",
           "description": " true to omit phased transactions that include a whitelist (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first phased transaction to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last phased transaction to retrieve (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getCurrencyPhasedTransactions": {
     "get": {
       "description": "Get pending phased transactions based on a currency in reverse chronological creation order. These transactions can be considered transaction approval requests.<br>
       curl
       'http://localhost:23457/api?requestType=getCurrencyPhasedTransactions&currency=14012153016645484545'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getCurrencyPhasedTransactions",
           "required": true,
           "type": "string",
           "default": "getCurrencyPhasedTransactions"
         }
         ,
         {
           "name": "currency",
           "in": "query",
           "description": " the currency ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": " the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "withoutWhitelist",
           "in": "query",
           "description": " true to omit phased transactions that include a whitelist (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first phased transaction to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last phased transaction to retrieve (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getVoterPhasedTransactions": {
     "get": {
       "description": "Get pending phased transactions which include a whitelist in reverse chronological creation order. These transactions can be considered transaction approval requests.<br>
       curl
       'http://localhost:23457/api?requestType=getVoterPhasedTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getCurrencyPhasedTransactions",
           "required": true,
           "type": "string",
           "default": "getCurrencyPhasedTransactions"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": " the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first phased transaction to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last phased transaction to retrieve (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getLinkedPhasedTransactions": {
     "get": {
       "description": "Gets the phased transactions with by-transaction voting model for a given linkedFullHash, regardless of their phasing status (pending, approved or rejected).
       Since the corresponding table is trimmed after finish height however, the result will not include those transactions that finished before the last trimming height.<br>
       curl
       'http://localhost:23457/api?requestType=getLinkedPhasedTransactions&linkedFullHash=bb481c38752a14493f0d40b3c60635935f13dd1fb33f68'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getCurrencyPhasedTransactions",
           "required": true,
           "type": "string",
           "default": "getCurrencyPhasedTransactions"
         }
         ,
         {
           "name": "linkedFullHash",
           "in": "query",
           "description": "the full hash of the transaction",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPhasingPoll": {
     "get": {
       "description": "Get the details of a phasing poll.<br>
       curl
       'http://localhost:23457/api?requestType=getPhasingPoll&transaction=5131561323415411145'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPhasingPoll",
           "required": true,
           "type": "string",
           "default": "getPhasingPoll"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "the full hash of the transaction transaction",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "countVotes",
           "in": "query",
           "description": "true to compute the poll result while the votes are still available (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPhasingPollVote": {
     "get": {
       "description": "Get a cast phasing poll vote given a phased transaction ID and an account ID of a voter, if it is still available.<br>
       curl
       'http://localhost:23457/api?requestType=getPhasingPollVote&transaction=5131561323415411145&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPhasingPollVote",
           "required": true,
           "type": "string",
           "default": "getPhasingPollVote"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "the transaction",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "countVotes",
           "in": "query",
           "description": "true to compute the poll result while the votes are still available (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPhasingPolls": {
     "get": {
       "description": "Get phasing poll details given multiple phased transaction IDs.<br>
       curl
       'http://localhost:23457/api?requestType=getPhasingPolls&transaction=5131561323415411145'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPhasingPollVote",
           "required": true,
           "type": "string",
           "default": "getPhasingPollVote"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "one of the multiple phased transaction IDs",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "countVotes",
           "in": "query",
           "description": "true to compute the poll result while the votes are still available (optional)",
           "required": true,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPhasingPollVotes": {
     "get": {
       "description": "Get all cast phasing poll votes in a phasing poll given a phased transaction ID, if they are still available.<br>
       curl
       'http://localhost:23457/api?requestType=getPhasingPollVotes&transaction=5131561323415411145'
       ",
       "tags": [
         "Phasing"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPhasingPollVotes",
           "required": true,
           "type": "string",
           "default": "getPhasingPollVotes"
         }
         ,
         {
           "name": "transaction",
           "in": "query",
           "description": "one of the multiple phased transaction IDs",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first vote to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last vote to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "boolean",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/castVote": {
     "post": {
       "description": "Cast a vote on a poll. POST only.<br>

       curl
       -X POST
       'http://localhost:23457/api?requestType=castVote&poll=63845789507928675673&vote02=1&secretPhrase=secretPhrase&feeTQT=100000000&deadline=60'

       <p>
       Note: The allowed vote values are integers between minRangeValue and maxRangeValue, inclusive.
       This range, along with the minimum and maximum number of options that can and must be voted on are specified when the poll is created. Refer to Create Poll.
       Vote range is from vote00 to vote10.
       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "castVote",
           "required": true,
           "type": "string",
           "default": "castVote"
         }
         ,
         {
           "name": "poll",
           "in": "query",
           "description": "the poll ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "vote00",
           "in": "query",
           "description": "an integer within the allowed range to vote for option (answer) 0 (optional if minNumberOfOptions met, default is -128)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/createPoll": {
     "post": {
       "description": "Create a new poll. POST only.<br>

       curl
       -X POST
       'http://localhost:23457/api?requestType=createPoll&name=TestPoll&description=YesOrNo?&minNumberOfOptions=1&maxNumberOfOptions=1&minRangeValue=0&maxRangeValue=1&minBalance=100000000000&minBalanceModel=1&option00=Yes&option01=No&secretPhrase=secretPhrase&feeTQT=1000000000&deadline=60'

       <p>
        Notes: Up to 10 options (answers) can be specified (option00-option10).
       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "createPoll",
           "required": true,
           "type": "string",
           "default": "createPoll"
         }
         ,
         {
           "name": "name",
           "in": "query",
           "description": "the name of the poll",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "description",
           "in": "query",
           "description": "the description of the poll, or the question to be answered",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "finishHeight",
           "in": "query",
           "description": "the block height when the poll is completed",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "votingModel",
           "in": "query",
           "description": "0 for One Vote Per Account, 1 for Vote By XIN Balance, 2 for Vote By Asset Balance and 3 for Vote By Currency Balance",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "minNumberOfOptions",
           "in": "query",
           "description": "the minimum number of options (answers) that must be voted for",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "maxNumberOfOptions",
           "in": "query",
           "description": "the maximum number of options (answers) that can be voted for",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "minRangeValue",
           "in": "query",
           "description": "the minimum integer value for an option (answer) (>= 0)",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "maxRangeValue",
           "in": "query",
           "description": "the maximum integer value for an option (answer) (>= minRangeValue)",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "minBalance",
           "in": "query",
           "description": "he minimum balance (in TQT or QNT) required for voting (optional, default 0)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "minBalanceModel",
           "in": "query",
           "description": "(required if minBalance > 0, must match votingModel when votingModel > 0) 1 for XIN balance, 2 for an asset balance, 3 for a currency balance",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "holding",
           "in": "query",
           "description": "the asset or currency ID (required if minBalanceModel > 1)",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "option00",
           "in": "query",
           "description": "the name of option (answer) 0",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "option01",
           "in": "query",
           "description": "the name of option (answer) 1 (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPoll": {
     "get": {
       "description": "Get the details of a poll.<br>
       curl
       'http://localhost:23457/api?requestType=getPoll&poll=54566010195498999548'
       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPoll",
           "required": true,
           "type": "string",
           "default": "getPoll"
         }
         ,
         {
           "name": "poll",
           "in": "query",
           "description": "the poll ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": "the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAllPolls": {
     "get": {
       "description": "Get the details of all polls.<br>
       curl
       'http://localhost:23457/api?requestType=getAllPolls&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPoll",
           "required": true,
           "type": "string",
           "default": "getPoll"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "timestamp",
           "in": "query",
           "description": "select polls starting from timestamp (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "include finished polls (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "finishedOnly",
           "in": "query",
           "description": "include finished polls only (optional)",
           "required": false,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPollResult": {
     "get": {
       "description": "Get the result of a poll.<br>
       curl
       'http://localhost:23457/api?requestType=getPollResult&poll=5876010195498999234'

       <p>
       Note: The votingModel, holding, minBalance and minBalanceModel parameters are optional and default to the original
       values specified when the poll was created (refer to Create Poll). The original values can only be overridden while
       the votes are still stored in the database, until 1441 blocks after the poll is completed. If votingModel is specified,
       holding, minBalance and minBalanceModel or the defaults specified above apply, otherwise they are ignored.
       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPoll",
           "required": true,
           "type": "string",
           "default": "getPoll"
         }
         ,
         {
           "name": "poll",
           "in": "query",
           "description": "the poll ID ",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "votingModel",
           "in": "query",
           "description": "the voting model (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "holding",
           "in": "query",
           "description": "holding type (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "minBalance",
           "in": "query",
           "description": "minimum balance (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "minBalanceModel",
           "in": "query",
           "description": "(required if minBalance > 0, must match votingModel when votingModel > 0)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPollVotes": {
     "get": {
       "description": "Get all votes on a poll in reverse chronological order.<br>
       curl
       'http://localhost:23457/api?requestType=getPollVotes&poll=5876010195498999234'

       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPollVotes",
           "required": true,
           "type": "string",
           "default": "getPollVotes"
         }
         ,
         {
           "name": "poll",
           "in": "query",
           "description": "the poll ID ",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "includeWeights",
           "in": "query",
           "description": "true to calculate and return the weight assigned to each vote (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based index to the first vote to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based index to the last vote to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPollVote": {
     "get": {
       "description": "Get a poll vote given a poll ID and an account ID.<br>
       curl
       'http://localhost:23457/api?requestType=getPollVote&poll=5876010195498999234&account=XIN-LHG8-88PJ-A5K9-2NRMB'

       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPollVote",
           "required": true,
           "type": "string",
           "default": "getPollVote"
         }
         ,
         {
           "name": "poll",
           "in": "query",
           "description": "the poll ID ",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "boolean",
         }
         ,
         {
           "name": "includeWeights",
           "in": "query",
           "description": "true to calculate and return the weight assigned to each vote (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPolls": {
     "get": {
       "description": "Get poll details in reverse creation order.<br>
       curl
       'http://localhost:23457/api?requestType=getPolls'

       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPollVote",
           "required": true,
           "type": "string",
           "default": "getPollVote"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "creation account ID filter (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "timestamp",
           "in": "query",
           "description": "the earliest poll (in seconds since the genesis block) to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "true to include completed polls (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "finishedOnly",
           "in": "query",
           "description": "true to exclude not yet executed, phased transactions (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "a zero-based index to the first poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "a zero-based index to the last poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/searchPolls": {
     "get": {
       "description": "Search for poll details given a name/description query string.<br>
       curl
       'http://localhost:23457/api?requestType=searchPolls&query=test'

       ",
       "tags": [
         "Voting"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "searchPolls",
           "required": true,
           "type": "string",
           "default": "searchPolls"
         }
         ,
         {
           "name": "query",
           "in": "query",
           "description": "full text query on the poll fields name (S) and description (S) in the standard Lucene syntax (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "includeFinished",
           "in": "query",
           "description": "true to include completed polls (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "a zero-based index to the first poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "a zero-based index to the last poll to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireBlock",
           "in": "query",
           "description": "the block ID of a block that must be present in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "requireLastBlock",
           "in": "query",
           "description": " the block ID of a block that must be last in the blockchain during execution (optional)",
           "required": false,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/sendMoneyEscrow": {
     "get": {
       "description": "Send token with escrow.<br>
       curl
       'http://localhost:23457/api?requestType=sendMoneyEscrow&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&amountTQT=500000000&escrowDeadline=5000'
       <p>
       <strong>NOTE:</strong> For final test purposes escrow is availlabe in TESTNET only. Please connect to the testnet for escrow operations.
       ",
       "tags": [
         "Escrow"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "sendMoneyEscrow",
           "required": true,
           "type": "string",
           "default": "sendMoneyEscrow"
         }
         ,
         {
           "name": "recipient",
           "in": "query",
           "description": "recipient account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "amountTQT",
           "in": "query",
           "description": "Amount in TQT to send",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "escrowDeadline",
           "in": "query",
           "description": "escrow deadline in blocks until expired",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "deadlineAction",
           "in": "query",
           "description": "deadline action, release, refund or split",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "requiredSigners",
           "in": "query",
           "description": "number of required signers",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "signers",
           "in": "query",
           "description": "account ID of signers, semicolon separated",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/escrowSign": {
     "get": {
       "description": "Sign (approve) an escrow.<br>
       curl
       'http://localhost:23457/api?requestType=escrow&Signescrow&decision=release'
       <p>
       <strong>NOTE:</strong> For final test purposes escrow is availlabe in TESTNET only. Please connect to the testnet for escrow operations.
       ",
       "tags": [
         "Escrow"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "escrowSign",
           "required": true,
           "type": "string",
           "default": "escrowSign"
         }
         ,
         {
           "name": "escrow",
           "in": "query",
           "description": "the escrow transaction ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "decision",
           "in": "query",
           "description": "the decision action, release, refund or split",
           "required": true,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getEscrowTransaction": {
     "get": {
       "description": "Get a specific escrow transaction.<br>
       curl
       'http://localhost:23457/api?requestType=getEscrowTransaction&escrow=54567685456241564'
       <p>
       <strong>NOTE:</strong> For final test purposes escrow is availlabe in TESTNET only. Please connect to the testnet for escrow operations.
       ",
       "tags": [
         "Escrow"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getEscrowTransaction",
           "required": true,
           "type": "string",
           "default": "getEscrowTransaction"
         }
         ,
         {
           "name": "escrow",
           "in": "query",
           "description": "the escrow transaction ID",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccountEscrowTransactions": {
     "get": {
       "description": "Get escrow transactions for a given account.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountEscrowTransactions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       <p>
       <strong>NOTE:</strong> For final test purposes escrow is availlabe in TESTNET only. Please connect to the testnet for escrow operations.
       ",
       "tags": [
         "Escrow"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountEscrowTransactions",
           "required": true,
           "type": "string",
           "default": "getAccountEscrowTransactions"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "string",
         }



       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }




   ,
   "/sendMoneySubscription": {
     "get": {
       "description": "Send token as recurrent payment.<br>
       curl
       'http://localhost:23457/api?requestType=sendMoneySubscription&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&amountTQT=500000000&frequency=7200'
       <p>
       <strong>NOTE:</strong> For final test purposes subscriptions are availlabe in TESTNET only. Please connect to the testnet for subscription operations.
       ",
       "tags": [
         "Subscriptions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "sendMoneySubscription",
           "required": true,
           "type": "string",
           "default": "sendMoneySubscription"
         }
         ,
         {
           "name": "recipient",
           "in": "query",
           "description": "recipient account ID",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "amountTQT",
           "in": "query",
           "description": "Amount in TQT to send",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "frequency",
           "in": "query",
           "description": "frequency in seconds",
           "required": true,
           "type": "string",
         }


       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/subscriptionCancel": {
     "get": {
       "description": "Cancel a subscription.<br>
       curl
       'http://localhost:23457/api?requestType=subscriptionCancel&subscription=87546571235456456'
       <p>
       <strong>NOTE:</strong> For final test purposes subscriptions are availlabe in TESTNET only. Please connect to the testnet for subscription operations.
       ",
       "tags": [
         "Subscriptions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "subscriptionCancel",
           "required": true,
           "type": "string",
           "default": "subscriptionCancel"
         }
         ,
         {
           "name": "subscription",
           "in": "query",
           "description": "the subscription ID",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getSubscription": {
     "get": {
       "description": "Get a subscription.<br>
       curl
       'http://localhost:23457/api?requestType=getSubscription&subscription=87546571235456456'
       <p>
       <strong>NOTE:</strong> For final test purposes subscriptions are availlabe in TESTNET only. Please connect to the testnet for subscription operations.
       ",
       "tags": [
         "Subscriptions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getSubscription",
           "required": true,
           "type": "string",
           "default": "getSubscription"
         }
         ,
         {
           "name": "subscription",
           "in": "query",
           "description": "the subscription ID",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccountSubscriptions": {
     "get": {
       "description": "Get subscriptions created by a specific account.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountSubscriptions&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       <p>
       <strong>NOTE:</strong> For final test purposes subscriptions are availlabe in TESTNET only. Please connect to the testnet for subscription operations.
       ",
       "tags": [
         "Subscriptions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountSubscriptions",
           "required": true,
           "type": "string",
           "default": "getAccountSubscriptions"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getSubscriptionsToAccount": {
     "get": {
       "description": "Get subscriptions to a specific account.<br>
       curl
       'http://localhost:23457/api?requestType=getSubscriptionsToAccount&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       <p>
       <strong>NOTE:</strong> For final test purposes subscriptions are availlabe in TESTNET only. Please connect to the testnet for subscription operations.
       ",
       "tags": [
         "Subscriptions"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getSubscriptionsToAccount",
           "required": true,
           "type": "string",
           "default": "getSubscriptionsToAccount"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "the account ID",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }


   ,
   "/createATProgram": {
     "get": {
       "description": "Create an automated transaction.<br>
       curl
       'http://localhost:23457/api?requestType=createATProgram'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "createATProgram",
           "required": true,
           "type": "string",
           "default": "createATProgram"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAT": {
     "get": {
       "description": "Get an automated transaction.<br>
       curl
       'http://localhost:23457/api?requestType=getAT'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAT",
           "required": true,
           "type": "string",
           "default": "getAT"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getATDetails": {
     "get": {
       "description": "Get details on an automated transaction.<br>
       curl
       'http://localhost:23457/api?requestType=getATDetails'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getATDetails",
           "required": true,
           "type": "string",
           "default": "getATDetails"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getATIds": {
     "get": {
       "description": "Get automated transaction ids.<br>
       curl
       'http://localhost:23457/api?requestType=getATIds'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getATIds",
           "required": true,
           "type": "string",
           "default": "getATIds"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getATLong": {
     "get": {
       "description": "Convert hex to long.<br>
       curl
       'http://localhost:23457/api?requestType=getATLong'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getATLong",
           "required": true,
           "type": "string",
           "default": "getATLong"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccountATs": {
     "get": {
       "description": "Get automated transactions for a specific account.<br>
       curl
       'http://localhost:23457/api?requestType=getAccountATs'
       <p>
       <strong>NOTE:</strong> Automated transactions are soon available in testnet ( port: 9876 ). Final API specifications right after initial tests.
       ",
       "tags": [
         "Contracts (AT)"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccountATs",
           "required": true,
           "type": "string",
           "default": "getAccountATs"
         }
         ,
         {
           "name": "placeholder",
           "in": "query",
           "description": "placeholder",
           "required": true,
           "type": "string",
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/getServices": {
     "get": {
       "description": "Get public and private services running on this node.<br>
       curl
       'http://localhost:23457/api?requestType=getServices'
       ",
       "tags": [
         "Services"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getServices",
           "required": true,
           "type": "string",
           "default": "getServices"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/unsignedJSONtoBytes": {
     "post": {
       "description": "Convert an unsigned transaction JSON into bytes. POST only<br>
       curl
       'http://localhost:23457/api?requestType=unsignedJSONtoBytes&unsignedTransactionJSON=JSON'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "unsignedJSONtoBytes",
           "required": true,
           "type": "string",
           "default": "unsignedJSONtoBytes"
         }
         ,
         {
           "name": "unsignedTransactionJSON",
           "in": "query",
           "description": "Unsigned transaction JSON",
           "required": true,
           "type": "string",
           "default": "unsignedTransactionJSON"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getLightClientPing": {
     "get": {
       "description": "Check node is reachable from client.<br>
       curl
       'http://localhost:23457/api?requestType=getLightClientPing'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getLightClientPing",
           "required": true,
           "type": "string",
           "default": "getLightClientPing"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getStatistics": {
     "get": {
       "description": "Get node statistics.<br>
       curl
       'http://localhost:23457/api?requestType=getStatistics'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getStatistics",
           "required": true,
           "type": "string",
           "default": "getStatistics"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getPeerState": {
     "get": {
       "description": "Get node peer state.<br>
       curl
       'http://localhost:23457/api?requestType=getPeerState'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getPeerState",
           "required": true,
           "type": "string",
           "default": "getPeerState"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getTransactions": {
     "get": {
       "description": "Get node transactions.<br>
       curl
       'http://localhost:23457/api?requestType=getTransactions'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getTransactions",
           "required": true,
           "type": "string",
           "default": "getTransactions"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/getAccounts": {
     "get": {
       "description": "Get latest accounts.<br>
       curl
       'http://localhost:23457/api?requestType=getAccounts'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAccounts",
           "required": true,
           "type": "string",
           "default": "getAccounts"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/sendToken": {
     "post": {
       "description": "Send token. POST only.
       curl
       -
       X
       POST
       'http://localhost:23457/api?requestType=sendToken&amountTQT=100000000&recipient=XIN-LHG8-88PJ-A5K9-2NRMB&secretPhrase=YourSecretPhrase&feeTQT=100000000&deadline=60'
       ",
       "tags": [
         "Client"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "sendToken",
           "required": true,
           "type": "string",
           "default": "sendToken"
         },
         {
           "name": "amountTQT",
           "in": "query",
           "description": "Is the amount (in TQT) in the transaction",
           "required": true,
           "type": "integer"
         },
         {
           "name": "recipient",
           "in": "query",
           "description": "Is the account ID of the recipient",
           "required": true,
           "type": "integer"
         },
         {
           "name": "recipientPublicKey",
           "in": "query",
           "description": "Is the public key of the receiving account (optional, enhances security of a new account)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "secretPhrase",
           "in": "query",
           "description": "Is the secret passphrase of the account (optional, but transaction neither signed nor broadcast if omitted)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "publicKey",
           "in": "query",
           "description": "Is the public key of the account (optional if secretPhrase provided)",
           "required": false,
           "type": "integer"
         },
         {
           "name": "feeTQT",
           "in": "query",
           "description": "Is the fee (in TQT) for the transaction",
           "required": true,
           "type": "integer"
         },
         {
           "name": "deadline",
           "in": "query",
           "description": "Is the deadline (in minutes) for the transaction to be confirmed, 32767 minutes maximum",
           "required": true,
           "type": "integer"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }


   ,
   "/storageMongoDb": {
     "get": {
       "description": "Ask for storage MongoDB status.<br>
       curl
       'http://localhost:23457/api?requestType=storageMongoDb'
       ",
       "tags": [
         "Storage"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "storageMongoDb",
           "required": true,
           "type": "string",
           "default": "storageMongoDb"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/storageRethinkDb": {
     "get": {
       "description": "Ask for storage RethinkDB status.<br>
       curl
       'http://localhost:23457/api?requestType=storageRethinkDb'
       ",
       "tags": [
         "Storage"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "storageRethinkDb",
           "required": true,
           "type": "string",
           "default": "storageRethinkDb"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/storageMySqlDb": {
     "get": {
       "description": "Ask for storage MySQL status.<br>
       curl
       'http://localhost:23457/api?requestType=storageMySqlDb'
       ",
       "tags": [
         "Storage"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "storageMySqlDb",
           "required": true,
           "type": "string",
           "default": "storageMySqlDb"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/proxyBitcoin": {
     "get": {
       "description": "Get BTC ticker JSON object (if proxy enabled).<br>
       curl
       'http://localhost:23457/api?requestType=proxyBitcoin'
       ",
       "tags": [
         "Proxies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "proxyBitcoin",
           "required": true,
           "type": "string",
           "default": "proxyBitcoin"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/proxyEthereum": {
     "get": {
       "description": "Get ETH ticker JSON object (if proxy enabled).<br>
       curl
       'http://localhost:23457/api?requestType=proxyEthereum'
       ",
       "tags": [
         "Proxies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "proxyEthereum",
           "required": true,
           "type": "string",
           "default": "proxyEthereum"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/proxyLiteCoin": {
     "get": {
       "description": "Get LTC ticker JSON object (if proxy enabled).<br>
       curl
       'http://localhost:23457/api?requestType=proxyEthereum'
       ",
       "tags": [
         "Proxies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "proxyLiteCoin",
           "required": true,
           "type": "string",
           "default": "proxyLiteCoin"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/proxyRipple": {
     "get": {
       "description": "Get XRP ticker JSON object (if proxy enabled).<br>
       curl
       'http://localhost:23457/api?requestType=proxyRipple'
       ",
       "tags": [
         "Proxies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "proxyRipple",
           "required": true,
           "type": "string",
           "default": "proxyRipple"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/proxyPoloniex": {
     "get": {
       "description": "Get Market summarized ticker JSON object (if proxy enabled).<br>
       curl
       'http://localhost:23457/api?requestType=proxyPoloniex'
       ",
       "tags": [
         "Proxies"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "proxyPoloniex",
           "required": true,
           "type": "string",
           "default": "proxyPoloniex"
         }

       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }



   ,
   "/gatewayIpfs": {
     "get": {
       "description": "Get file from IPFS network (if enabled).<br>
       curl
       'http://localhost:23457/api?requestType=gatewayIpfs&xGetFileContent=fileHash'
       ",
       "tags": [
         "Gateways"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "gatewayIpfs",
           "required": true,
           "type": "string",
           "default": "gatewayIpfs"
         }
         ,
         {
           "name": "xGetFileContent",
           "in": "query",
           "description": "file hash, stored on IPFS",
           "required": true,
           "type": "string",
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }
   ,
   "/gatewayTenderMint": {
     "get": {
       "description": "Execute Tendermint command (if enabled).<br>
       curl
       'http://localhost:23457/api?requestType=gatewayTenderMint&command=ping'
       ",
       "tags": [
         "Gateways"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "gatewayTenderMint",
           "required": true,
           "type": "string",
           "default": "gatewayTenderMint"
         }
         ,
         {
           "name": "command",
           "in": "query",
           "description": "command to execute",
           "required": true,
           "type": "string",
           "default": "ping"
         }
       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }


   ,
   "/getAllCrowdfundings": {
     "get": {
       "description": "Get all crowdfunding campaigns.<br>
       curl
       'http://localhost:23457/api?requestType=getAllCrowdfundings&account=XIN-LHG8-88PJ-A5K9-2NRMB'
       <p>
       <strong>NOTE:</strong> For final test purposes crowdfunding is availlabe in TESTNET only. Please connect to the testnet for crowdfunding operations.
       ",
       "tags": [
         "Crowdfunding"
       ],
       "parameters": [
         {
           "name": "requestType",
           "in": "query",
           "description": "getAllCrowdfundings",
           "required": true,
           "type": "string",
           "default": "getAllCrowdfundings"
         }
         ,
         {
           "name": "account",
           "in": "query",
           "description": "account id",
           "required": true,
           "type": "string",
         }
         ,
         {
           "name": "includeAmounts",
           "in": "query",
           "description": "include amounts (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "includeCounts",
           "in": "query",
           "description": "include counts  (optional)",
           "required": false,
           "type": "boolean",
         }
         ,
         {
           "name": "firstIndex",
           "in": "query",
           "description": "zero-based first index to retrieve (optional)",
           "required": false,
           "type": "string",
         }
         ,
         {
           "name": "lastIndex",
           "in": "query",
           "description": "zero-based last index to retrieve (optional)",
           "required": false,
           "type": "string",
         }



       ],
       "responses": {
         "200": {
           "description": "",
           "examples": {}
         }
       }
     }
   }











  }
}
